{
  "version": 3,
  "sources": ["../src/main.js", "../node_modules/@webqit/util/js/isObject.js", "../node_modules/@webqit/util/js/getType.js", "../node_modules/@webqit/util/js/isArray.js", "../node_modules/@webqit/util/js/isTypeFunction.js", "../node_modules/@webqit/util/js/isNull.js", "../node_modules/@webqit/util/js/isUndefined.js", "../node_modules/@webqit/util/js/isTypeObject.js", "../node_modules/@webqit/util/js/isEmpty.js", "../node_modules/@webqit/util/js/isFunction.js", "../node_modules/@webqit/util/js/isString.js", "../node_modules/@webqit/util/js/isTypeArray.js", "../node_modules/@webqit/util/js/wq.js", "../node_modules/@webqit/util/arr/from.js", "../src/util.js", "../src/core/Registration.js", "../src/core/ListenerRegistration.js", "../src/core/Registry.js", "../src/core/Descriptor.js", "../src/core/ListenerRegistry.js", "../src/core/TrapsRegistration.js", "../src/core/TrapsRegistry.js", "../src/actors.js", "../src/index.js", "../src/targets.browser.js"],
  "sourcesContent": ["import { _isObject, _isTypeObject, _isFunction, _getType } from '@webqit/util/js/index.js';\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\nimport { _wq, _await, env } from './util.js';\nimport ListenerRegistry from './core/ListenerRegistry.js';\nimport TrapsRegistry from './core/TrapsRegistry.js';\nimport Descriptor from './core/Descriptor.js';\nimport { unproxy } from './actors.js';\n\n/* ---------------SPECIAL APIs--------------- */\n\n/**\n * Creates a Path array instance from arguments.\n * \n * @param Array\t            ...segments\n *\n * @return Path\n */\nclass Path extends Array {}\nexport function path( ...segments ) {\n    return new Path( ...segments );\n}\n\n/**\n * Creates a \"Subtree\" directive.\n * \n * @return Subtree\n */\nclass Subtree extends Array {}\nexport function subtree() {\n    return new Subtree;\n}\n\n/**\n * Creates an \"Infinity\" directive.\n * \n * @return Infinity\n */\nexport function any() {\n    return Infinity;\n}\n\n/**\n * Reduces a path array against handler.\n * \n * @param Array|Object\t    target\n * @param Array\t            path\n * @param Function\t        receiver\n * @param Function\t        final\n * @param Object\t        params\n * \n * @example reduce( object, [ segement1, segement2 ], observe, ( value, flags ) => {}, params );\n *\n * @return Any\n */\nexport function reduce( target, path, receiver, final = x => x, params = {} ) {\n    const _isSubtree = path instanceof Subtree;\n    if ( !_isSubtree && !path?.length ) return;\n    return ( function eat( target, path, $params, $isSubtree ) {\n        const isSubtree = $isSubtree || path[ $params.level ] instanceof Subtree;\n        const segment = isSubtree ? Infinity : path[ $params.level ];\n        const isLastSegment = isSubtree ? false : $params.level === path.length - 1;\n        if ( target instanceof Descriptor && target.operation !== 'get' ) {\n            // Always probe event-generated trees\n            $params = { ...$params, probe: 'always' };\n        } else if ( $params.probe !== 'always' ) {\n            // Probe until (before) last segment\n            $params = { ...$params, probe: !isLastSegment };\n        }\n        // ---------------\n        return receiver( target, segment, ( result, ...args ) => {\n            // -----------\n            const addTrail = ( desc ) => {\n                if ( !( desc instanceof Descriptor ) ) return;\n                desc.path = 'key' in desc ? [ desc.key ] : [];\n                if ( target instanceof Descriptor ) {\n                    desc.path = 'key' in desc ? target.path.concat( desc.key ) : target.path.slice( 0 );\n                    Object.defineProperty( desc, 'context', { get: () => target, configurable: true } );\n                }\n            };\n            const flags = args[ 0 ] || {};\n            const advance = ( result ) => {\n                if ( result instanceof Descriptor && 'argumentsList' in result ) {\n                    return;\n                }\n                const $value = resolveObj( result/* a Descriptor who's value could be proxied */, false );\n                return _await( $value/* could be a promise */, $value => {\n                    if ( result instanceof Descriptor ) {\n                        result.value = $value; // Update to (fulfilled), unproxied, value\n                    } else {\n                        result = $value;\n                    }\n                    return eat( result, path, { ...$params, ...flags, keyInParent: result.key, level: $params.level + 1, }, isSubtree );\n                } );\n            };\n            // -----------\n            if ( isPropsList( segment ) && Array.isArray( result ) ) {\n                result.forEach( addTrail );\n                if ( isLastSegment ) {\n                    return final( result, ...args );\n                }\n                if ( isSubtree && result[ 0 ] instanceof Descriptor && ( result[ 0 ].operation !== 'get' || params.asGet ) ) {\n                    final( result, ...args );\n                }\n                for ( const entry of result ) {\n                    advance( entry );\n                }\n                return;\n            }\n            // -----------\n            addTrail( result );\n            if ( isLastSegment ) {\n                return final( result, ...args );\n            }\n            return advance( result );\n            // -----------\n        }, $params );\n    } )( target, path.slice( 0 ), { ...params, level: 0 }, _isSubtree );\n}\n\n/**\n * Adds an observer to a target's registry.\n *\n * @param Array|Object\t    target\n * @param String|Object\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return AbortController\n */\nexport function observe( target, prop, receiver, params = {} ) {\n    // ---------------\n    const originalTarget = resolveObj( target, !params.level );\n\tif ( _isFunction( arguments[ 1 ] ) ) {\n        [ , receiver, params = {} ] = arguments;\n        prop = Infinity;\n\t}\n\tif ( !_isFunction( receiver ) ) throw new Error( `Handler must be a function; \"${ _getType( receiver ) }\" given!` );\n    if ( prop instanceof Path || prop instanceof Subtree ) return reduce( originalTarget, prop, observe, receiver, params );\n    // ---------------\n    params = { ...params, descripted: true };\n    delete params.live;\n    if ( !_isTypeObject( originalTarget ) ) return params.probe && get( originalTarget, prop, receiver, params ) || undefined;\n    // ---------------\n    const emit = bind( originalTarget, prop, receiver, params );\n    if ( params.probe ) {\n        return get( originalTarget, prop, emit, params );\n    }\n    return emit();\n}\n\n/**\n * Adds an interceptor object to a target's registry.\n *\n * @param Array|Object\t    target\n * @param Object\t        traps\n * @param Object\t\t    params\n *\n * @return AbortRegistry\n */\nexport function intercept( target, traps, params = {} ) {\n    // ---------------\n    const originalTarget = resolveObj( target );\n    if ( !_isObject( traps ) ) {\n        [ /*target*/, /*operation*/, /*handler*/, params = {} ] = arguments;\n        traps = { [ arguments[ 1 ] ]: arguments[ 2 ] };\n    }\n    // ---------------\n    return TrapsRegistry.getInstance( originalTarget, true, params.namespace ).addRegistration( { traps, params } );\n}\n\n/* ---------------QUERY APIs--------------- */\n\n/**\n * Performs a \"getOwnPropertyDescriptor\" operation.\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function getOwnPropertyDescriptor( target, prop, receiver = x => x, params = {} ) {\n    return exec( target, 'getOwnPropertyDescriptor', { key: prop }, receiver, params );\n}\n\n/**\n * Performs a \"getOwnPropertyDescriptors\" operation.\n * @note this isn't part of the standard Reflect API.\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function getOwnPropertyDescriptors( target, prop, receiver = x => x, params = {} ) {\n    return exec( target, 'getOwnPropertyDescriptors', { key: prop }, receiver, params );\n}\n\n/**\n * Performs a \"getPrototypeOf\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function getPrototypeOf( target, receiver = x => x, params = {} ) {\n    return exec( target, 'getPrototypeOf', {}, receiver, params );\n}\n\n/**\n * Performs a \"isExtensible\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function isExtensible( target, receiver = x => x, params = {} ) {\n    return exec( target, 'isExtensible', {}, receiver, params );\n}\n\n/**\n * Performs a \"ownKeys\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function ownKeys( target, receiver = x => x, params = {} ) {\n    return exec( target, 'ownKeys', {}, receiver, params );\n}\n\n/**\n * Performs an operation of the given \"type\".\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function has( target, prop, receiver = x => x, params = {} ) {\n    return exec( target, 'has', { key: prop }, receiver, params );\n}\n\n/**\n * Performs a get operation.\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function get( target, prop, receiver = x => x, params = {} ) {\n    // ---------------\n    let isLive;\n    const originalTarget = resolveObj( target, !params.level );\n    if ( _isObject( receiver ) ) {\n        [ params, receiver ] = [ receiver, x => x ];\n    } else if ( params.live ) { isLive = true; }\n    if ( prop instanceof Path || prop instanceof Subtree ) return reduce( originalTarget, prop, get, receiver, { ...params, asGet: true } );\n    // ---------------\n    return resolveProps( originalTarget, prop, props => {\n        const related = [ ...props ];\n        return ( function next( results, _props, _done ) {\n            if ( !_props.length ) return _done( results );\n            const prop = _props.shift();\n            if ( ![ 'string', 'number', 'symbol' ].includes( typeof prop ) ) {\n                throw new Error( `Property name/key ${ prop } invalid.` );\n            }\n            // ---------\n            function defaultGet( descriptor, value = undefined ) {\n                const _next = value => ( descriptor.value = value, next( [ ...results, params.live || params.descripted ? descriptor : value ]/** not using concat() as value may be an array */, _props, _done ) );\n                if ( arguments.length > 1 ) return _next( value );\n                if ( !_isTypeObject( originalTarget ) ) return _next( originalTarget?.[ descriptor.key ] );\n                const accessorizedProps = _wq( originalTarget, 'accessorizedProps', false );\n                const accessorization = accessorizedProps && accessorizedProps.get( descriptor.key );\n                if ( accessorization && accessorization.intact() ) {\n                    return _next( accessorization.getValue( params.withPropertyDescriptors ) );\n                }\n                if ( params.withPropertyDescriptors ) {\n                    const desc = Object.getOwnPropertyDescriptor( originalTarget, descriptor.key );\n                    return _next( desc );\n                }\n                return _next( Reflect.get( originalTarget, descriptor.key/*, ...( params.receiver ? [ params.receiver ] : [] )*//*Throws Illegal invocation error ffor DOM nodes, e.g.*/ ) );\n            }\n            // ---------\n            const descriptor = new Descriptor( originalTarget, {\n                type: 'get',\n                key: prop,\n                value: undefined,\n                operation: 'get',\n                related,\n            } );\n            if ( !_isTypeObject( originalTarget ) ) return defaultGet( descriptor );\n            const trapsRegistry = TrapsRegistry.getInstance( originalTarget, false, params.namespace );\n            if ( trapsRegistry ) {\n                return trapsRegistry.emit( descriptor, defaultGet );\n            }\n            return defaultGet( descriptor );\n        } )( [], props.slice( 0 ), results => {\n            const result_s = isPropsList( prop/*original*/ ) ? results : results[ 0 ];\n            if ( isLive && _isTypeObject( originalTarget ) ) {\n                const emit = bind( originalTarget, prop, receiver, params, target.key );\n                return emit( result_s );\n            }\n            return receiver( result_s );\n        } );\n    }, params );\n}\n\n/* ---------------MUTATION APIs--------------- */\n\n/**\n * Performs a batch operation.\n * \n * @param Object\t        target\n * @param Function\t        callback\n * @param Object\t        params\n *\n * @return Void\n */\nexport function batch( target, callback, params = {} ) {\n    const originalTarget = resolveObj( target );\n    return ListenerRegistry.getInstance( originalTarget, true, params.namespace ).batch( callback, params );\n}\n\n/**\n * Performs a mirror operation.\n * \n * @param Object\t        source\n * @param Object\t        target\n * @param Object\t        params\n *\n * @return Void\n */\nexport function map( source, target, params = {} ) {\n    target = resolveObj( target );\n    source = resolveObj( source );\n    const only = ( params.only || [] ).slice( 0 ), except = ( params.except || [] ).slice( 0 );\n    const sourceKeys = Object.keys( params.spread ? [ ...source ] : source ).map( k => !isNaN( k ) ? parseInt( k ) : k );\n    const filteredKeys = only.length ? only.filter( k => sourceKeys.includes( k ) ) : sourceKeys.filter( k => !except.includes( k ) );\n    const resolveKey = k => { \n        if ( !Array.isArray( target ) || isNaN( k ) ) return k;\n        return k - except.filter( i => i < k ).length;\n    };\n    const doSet = key => {\n        const descriptor = getOwnPropertyDescriptor( source, key, params );\n        if ( ( 'value' in descriptor ) && descriptor.writable && descriptor.enumerable && descriptor.configurable ) {\n            set( target, resolveKey( key ), descriptor.value, params );\n        } else if ( descriptor.enumerable || params.onlyEnumerable === false ) { defineProperty( target, key, { ...descriptor, configurable: true }, params ); }\n    };\n    batch( target, () => {\n        filteredKeys.forEach( doSet );\n    } );\n    return observe( source, mutations => {\n        //batch( target, () => {\n            mutations.filter( m => only.length ? only.includes( m.key ) : !except.includes( m.key ) ).forEach( m => {\n                if ( m.type === 'delete' ) return deleteProperty( target, resolveKey( m.key ), params );\n                if ( m.type === 'def' ) {\n                    if ( m.value.enumerable || params.onlyEnumerable === false ) {\n                        defineProperty( target, resolveKey( m.key ), { ...m.value, configurable: true }, params );\n                    }\n                    return;\n                }\n                doSet( m.key );\n            } );\n        //}, params );\n    }, { ...params, withPropertyDescriptors: true } );\n}\n\n/**\n * Performs a set operation.\n * \n * @param Object\t        target\n * @param String|Number\t    prop\n * @param Any\t            value\n * @param Function\t        receiver\n * @param Object\t        params\n * @param Bool\t            def\n *\n * @return Any\n */\nexport function set( target, prop, value, receiver = x => x, params = {}, def = false ) {\n    // ---------------\n    const originalTarget = resolveObj( target );\n    let entries = [ [ prop, value ] ];\n    if ( _isObject( prop ) ) {\n        [ /*target*/, /*hash*/, receiver = x => x, params = {}, def = false ] = arguments;\n        entries = Object.entries( prop );\n    }\n    if ( _isObject( receiver ) ) { [ def, params, receiver ] = [ typeof params === 'boolean' ? params : def, receiver, x => x ]; }\n    // ---------------\n    const related = entries.map( ( [ prop ] ) => prop );\n    return ( function next( descriptors, entries, _done ) {\n        if ( !entries.length ) return _done( descriptors );\n        const [ prop, value ] = entries.shift();\n        // ---------\n        function defaultSet( descriptor, status = undefined ) {\n            const _next = status => ( descriptor.status = status, next( descriptors.concat( descriptor ), entries, _done ) );\n            if ( arguments.length > 1 ) return _next( descriptor, status );\n            const accessorizedProps = _wq( originalTarget, 'accessorizedProps', false );\n            const accessorization = accessorizedProps && accessorizedProps.get( descriptor.key );\n            if ( descriptor.type === 'def' ) {\n                if ( accessorization && !accessorization.restore() ) _next( false );\n                Object.defineProperty( originalTarget, descriptor.key, descriptor.value );\n                return _next( true );\n            }\n            if ( accessorization && accessorization.intact() ) {\n                return _next( accessorization.setValue( descriptor.value ) );\n            }\n            return _next( Reflect.set( originalTarget, descriptor.key, descriptor.value ) );\n        }\n        // ---------\n        function exec( isUpdate, oldValue ) {\n            if ( params.diff && value === oldValue ) return next( descriptors, entries, _done );\n            const descriptor = new Descriptor( originalTarget, {\n                type: def ? 'def' : 'set',\n                key: prop,\n                value,\n                isUpdate,\n                oldValue,\n                related: [ ...related ],\n                operation: def ? 'defineProperty' : 'set',\n                detail: params.detail,\n            } );\n            const trapsRegistry = TrapsRegistry.getInstance( originalTarget, false, params.namespace );\n            return trapsRegistry \n                ? trapsRegistry.emit( descriptor, defaultSet ) \n                : defaultSet( descriptor );\n        }\n        // ---------\n        return has( originalTarget, prop, exists => {\n            if ( !exists ) return exec( exists );\n            if ( prop === 'length' && Array.isArray( originalTarget ) && _wq( originalTarget ).has( '$length' ) ) {\n                return exec( true, _wq( originalTarget ).get( '$length' ) );\n            }\n            const $params = { ...params, withPropertyDescriptors: def };\n            return get( originalTarget, prop, oldValue => exec( exists, oldValue ), $params );\n        }, params );\n        // ---------\n    } )( [], entries.slice( 0 ), descriptors => {\n        const listenerRegistry = ListenerRegistry.getInstance( originalTarget, false, params.namespace );\n        if ( listenerRegistry ) listenerRegistry.emit( descriptors, { eventsArePropertyDescriptors: !!def } );\n        return receiver(\n            isPropsList( prop/*original*/ ) ? descriptors.map( opr => opr.status ) : descriptors[ 0 ]?.status\n        );\n    } );\n}\n\n/**\n * Performs a defineProperty operation.\n * \n * @param Object\t        target\n * @param String|Number\t    prop\n * @param Object\t        descriptor\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function defineProperty( target, prop, descriptor, receiver = x => x, params = {} ) {\n    return set( target, prop, descriptor, receiver, params, true/*def*/ );\n}\n\n/**\n * Performs a defineProperties operation.\n * @note this isn't part of the standard Reflect API.\n * \n * @param Object\t        target\n * @param Object\t        descriptors\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function defineProperties( target, descriptors, receiver = x => x, params = {} ) {\n    return set( target, descriptors, receiver, params, true/*def*/ );\n}\n\n/**\n * Performs a delete operation.\n * \n * @param Object\t        target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function deleteProperty( target, prop, receiver = x => x, params = {} ) {\n    // ---------------\n    const originalTarget = resolveObj( target );\n    if ( _isObject( receiver ) ) { [ params, receiver ] = [ receiver, x => x ]; }\n    // ---------------\n    const props = _arrFrom( prop, false ), related = [ ...props ];\n    return ( function next( descriptors, props, _done ) {\n        if ( !props.length ) return _done( descriptors );\n        const prop = props.shift();\n        // ---------\n        function defaultDel( descriptor, status = undefined ) {\n            const _next = status => ( descriptor.status = status, next( descriptors.concat( descriptor ), props, _done ) );\n            if ( arguments.length > 1 ) return _next( descriptor, status );\n            const accessorizedProps = _wq( originalTarget, 'accessorizedProps', false );\n            const accessorization = accessorizedProps && accessorizedProps.get( descriptor.key );\n            if ( accessorization && !accessorization.restore() ) _next( false );\n            return _next( Reflect.deleteProperty( originalTarget, descriptor.key ) );\n        }\n        // ---------\n        function exec( oldValue ) {\n            const descriptor = new Descriptor( originalTarget, {\n                type: 'delete',\n                key: prop,\n                oldValue,\n                related: [ ...related ],\n                operation: 'deleteProperty',\n                detail: params.detail,\n            } );\n            const trapsRegistry = TrapsRegistry.getInstance( originalTarget, false, params.namespace );\n            return trapsRegistry \n                ? trapsRegistry.emit( descriptor, defaultDel ) \n                : defaultDel( descriptor );\n        }\n        // ---------\n        return get( originalTarget, prop, exec, params );\n        // ---------\n    } )( [], props.slice( 0 ), descriptors => {\n        const listenerRegistry = ListenerRegistry.getInstance( originalTarget, false, params.namespace );\n        if ( listenerRegistry ) listenerRegistry.emit( descriptors );\n        return receiver(\n            isPropsList( prop/*original*/ ) ? descriptors.map( opr => opr.status ) : descriptors[ 0 ].status\n        );\n    } );\n}\n\n/**\n * @alias deleteProperty()\n */\nexport function deleteProperties( target, props, receiver = x => x, params = {} ) {\n    return deleteProperty( ...arguments );\n}\n\n/* ---------------EFFECT APIs--------------- */\n\n/**\n * Performs a \"construct\" operation.\n *\n * @param Array|Object\t    target\n * @param Array\t\t\t    argumentsList\n * @param Object\t\t    newTarget\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function construct( target, argumentsList, newTarget = null, receiver = x => x, params = {} ) {\n    return exec( target, 'construct', arguments.length > 2 ? { argumentsList, newTarget } : { argumentsList }, receiver, params );\n}\n\n/**\n * Performs an \"apply\" operation.\n *\n * @param Array|Object\t    target\n * @param Any\t            thisArgument\n * @param Array\t            argumentsList\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function apply( target, thisArgument, argumentsList, receiver = x => x, params = {} ) {\n    const originalThis = unproxy( thisArgument );\n    let returnValue;\n    if ( Array.isArray( thisArgument ) ) {\n        if ( params.arrayMethodName ) {\n            const descriptor = new Descriptor( originalThis, {\n                operation: params.arrayMethodName,\n                argumentsList\n            } );\n            const listenerRegistry = ListenerRegistry.getInstance( originalThis, false, params.namespace );\n            listenerRegistry?.emit( [ descriptor ], { eventIsArrayMethodDescriptor: true } );\n        }\n        _wq( originalThis ).set( '$length', originalThis.length );\n        returnValue = batch(\n            originalThis,\n            () => exec( target, 'apply', { thisArgument/*proxy wrappers allowed; in fact is why it works*/, argumentsList }, receiver, params ),\n            params\n        );\n        _wq( originalThis ).delete( '$length' );\n    } else {\n        returnValue = exec( target, 'apply', { thisArgument: originalThis, argumentsList }, receiver, params );\n    }\n    return returnValue;\n}\n\n/**\n * Performs a \"setPrototypeOf\" operation.\n *\n * @param Array|Object\t    target\n * @param Anyr\t            proto\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function setPrototypeOf( target, proto, receiver = x => x, params = {} ) {\n    return exec( target, 'setPrototypeOf', { proto }, receiver, params );\n}\n\n/**\n * Performs a \"preventExtension\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function preventExtensions( target, receiver = x => x, params = {} ) {\n    return exec( target, 'preventExtensions', {}, receiver, params );\n}\n\n/* ---------------HELPER APIs--------------- */\n\n/**\n * Adds an observer to a target's registry.\n *\n * @param Array|Object\t    target\n * @param String|Object\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Function: AbortController\n */\nfunction bind( target, prop, receiver, params = {} ) {\n    const controller = new AbortController;\n    env.setMaxListeners?.( 0, controller.signal );\n    if ( params.signal ) { params.signal.addEventListener( 'abort', () => controller.abort() ); }\n    const $params = { ...params, signal: controller.signal };\n    const listenerRegistry = ListenerRegistry.getInstance( target, true, $params.namespace );\n    const childRegistrations = new Map;\n    return function emit( descriptor_s = [], prevRegistration = null ) {\n        let flags, registrationNext, isExisting;\n        if ( isPropsList( prop ) ) {\n            if ( prevRegistration ) {\n                isExisting = true;\n                registrationNext = prevRegistration;\n                for ( const descriptor of descriptor_s ) {\n                    childRegistrations.get( descriptor.key )?.remove();\n                    childRegistrations.delete( descriptor.key );\n                }\n            } else {\n                registrationNext = listenerRegistry.addRegistration( prop, emit, $params );\n            }\n            flags = { signal: registrationNext.signal, childRegistrations };\n        } else {\n            prevRegistration?.remove();\n            registrationNext = listenerRegistry.addRegistration( prop, emit, $params );\n            flags = { signal: registrationNext.signal };\n        }\n        // ------------------\n        if ( $params.childRegistrations && $params.keyInParent ) {\n            $params.childRegistrations.set( $params.keyInParent, registrationNext );\n        }\n        // ------------------\n        if ( arguments.length ) {\n            const handlerReturnValue = receiver( descriptor_s, flags );\n            if ( arguments.length > 1 ) return handlerReturnValue;\n        }\n        return controller;\n    };\n}\n\n/**\n * Performs an operation of the given \"type\".\n *\n * @param Array|Object\t    target\n * @param String\t\t    operation\n * @param Object\t\t    payload\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nfunction exec( target, operation, payload = {}, receiver = x => x, params = {} ) {\n    // ---------\n    target = resolveObj( target );\n    if ( _isObject( receiver ) ) { [ params, receiver ] = [ receiver, x => x ]; }    \n    // ---------\n    function defaultExec( descriptor, result ) {\n        if ( arguments.length > 1 ) return receiver( result );\n        return receiver( ( Reflect[ operation ] || Object[ operation ] )( target, ...Object.values( payload ) ) );\n    }\n    // ---------\n    const descriptor = new Descriptor( target, { operation, ...payload } );\n    const trapsRegistry = TrapsRegistry.getInstance( target, false, params.namespace );\n    if ( trapsRegistry ) {\n        return trapsRegistry.emit( descriptor, defaultExec );\n    }\n    return defaultExec( descriptor );\n}\n\n// Asks if prop is a multi-result field\nfunction isPropsList( prop ) {\n    return prop === Infinity || Array.isArray( prop );\n}\n\n// Resolves obj down to it's self\nfunction resolveObj( obj, assert = true, probePropertyDescriptors = true ) {\n\tif ( ( !obj || !_isTypeObject( obj ) ) && assert ) throw new Error( `Object must be of type object or array! \"${ _getType( obj ) }\" given.` );\n    if ( obj instanceof Descriptor ) {\n        if ( obj.type === 'def' && probePropertyDescriptors ) {\n            obj = typeof obj.value.get === 'function' ? obj.value.get() : obj.value.value;\n        } else {\n            obj = obj.value;\n        }\n    }\n\treturn obj && unproxy( obj );\n}\n\n// Resolves prop down to actual keys\nfunction resolveProps( obj, prop, receiver, params = {} ) {\n    if ( prop === Infinity ) {\n        if ( params.level && !_isTypeObject( obj ) ) return receiver( [] );\n        return receiver( Object.entries( Object.getOwnPropertyDescriptors( obj ) ).filter( ( [ , p ] ) => p.writable !== false && !p.get && !p.set ).map( ( [ name ] ) => name ) );\n    }\n    return receiver( _arrFrom( prop, false ) );\n}\n", "\n/**\n * Tells if val is pure object.\n *\n * @param object\t \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\n};\n", "\n/**\n * Returns the val's type.\n *\n * @param string \tval\n *\n * @return string\n */\nexport default function(val) {\n\treturn typeof val;\n};\n", "\n/**\n * Tells if val is of type \"array\".\n *\n * @param object\t \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn Array.isArray(val);\n};\n", "\n/**\n * Tells if val is of type \"function\".\n * This holds true for both regular functions and classes.\n *\n * @param object\t \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn typeof val === 'function';\n};\n", "\n/**\n * Tells if val is undefined or is null.\n *\n * @param string \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn val === null || val === '';\n};\n", "\n/**\n * Tells if val is undefined or is of type \"undefined\".\n *\n * @param string \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\n};\n", "\n/**\n * @imports\n */\nimport _isTypeFunction from './isTypeFunction.js';\n\n/**\n * Tells if val is of type \"object\".\n * This holds true for anything object, including built-ins.\n *\n * @param object\t \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\n};\n", "\n/**\n * @imports\n */\nimport _isNull from './isNull.js';\nimport _isUndefined from './isUndefined.js';\nimport _isTypeObject from './isTypeObject.js';\n\n/**\n * Tells if val is empty in its own type.\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\n * objects without keys, empty arrays.\n *\n * @param string \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\n};\n", "\n/**\n * @imports\n */\nimport _isTypeFunction from './isTypeFunction.js';\n\n/**\n * Tells if val is of type \"function\".\n *\n * @param object \t\tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\n};\n", "\n/**\n * Tells if val is of type \"string\".\n *\n * @param string \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\n};\n", "\n/**\n * @imports\n */\nimport _isString from './isString.js';\nimport _isUndefined from './isUndefined.js';\n\n/**\n * Tells if val is \"array-like\".\n * This holds true for anything that has a length property.\n *\n * @param object\t \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn !_isString(val) && !_isUndefined(val.length);\n};\n", "export default function wq(obj, ...namespaces) {\n    if (!obj || !['object', 'function'].includes(typeof obj)) {\n        throw new Error(`Argument #1 must be of type object`);\n    }\n    let wq = obj[Symbol.for('wq')];\n    if (!wq) {\n        wq = new WQInternals;\n        Object.defineProperty(obj, Symbol.for('wq'), {\n            value: wq,\n            // Defaults, but to be explicit...\n            enumerable: false,\n            configurable: false,\n            writable: false\n        });\n    }\n    if (!namespaces.length) {\n        return wq;\n    }\n    let _ns, _wq;\n    while ((_ns = namespaces.shift())) {\n        if ((_wq = wq) && !(wq = wq.get(_ns))) {\n            wq = new WQInternals;\n            _wq.set(_ns, wq);\n        }\n    }\n    return wq;\n}\n\nclass WQInternals extends Map {}", "\n/**\n * @imports\n */\nimport _isArray from '../js/isArray.js';\nimport _isTypeArray from '../js/isTypeArray.js';\nimport _isEmpty from '../js/isEmpty.js';\nimport _isObject from '../js/isObject.js';\n\n/**\n * Casts an array-like object to an array.\n *\n * @param mixed \tval\n * @param bool\t \tcastObject\n *\n * @return array\n */\nexport default function(val, castObject = true) {\n\tif (_isArray(val)) {\n\t\treturn val;\n\t};\n\tif (!castObject && _isObject(val)) {\n\t\treturn [val];\n\t};\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\n\t\treturn [];\n\t};\n\tif (_isTypeArray(val)) {\n\t\treturn Array.prototype.slice.call(val);\n\t};\n\tif (_isObject(val)) {\n\t\treturn Object.values(val);\n\t};\n\treturn [val];\n};\n", "\n/**\n * @imports\n */\nimport { _wq as __wq } from '@webqit/util/js/index.js';\n\nexport const _wq = ( target, ...args ) => __wq( target, 'observerAPI', ...args );\n\nexport const _await = ( value, callback ) => value instanceof Promise ? value.then( callback ) : callback( value );\n\nexport const env = {};\n", "\n/**\n * ---------------------------\n * The Registration class\n * ---------------------------\n */\n\nexport default class Registration {\n\t\n\t/**\n\t * Initializes the instance.\n\t *\n\t * @param Registry\t\t\tregistry\n\t * @param object\t\t\tdfn\n\t *\n\t * @return void\n\t */\n\tconstructor( registry, dfn ) {\n\t\tthis.registry = registry;\n\t\tObject.assign( this, { ...dfn, target: registry.target } );\n\t\tif ( this.params.signal ) {\n\t\t\tthis.params.signal.addEventListener( 'abort', () => this.remove() );\n\t\t}\n\t}\n\n\t/**\n\t * Sets a \"disconnected\" flag on the Registration.\n\t *\n\t * @return void\n\t */\n\tremove() {\n\t\tthis.removed = true;\n\t\treturn this.registry.removeRegistration( this );\n\t}\n}", "\n/**\n * @imports\n */\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\nimport Registration from './Registration.js';\nimport { _await, env } from '../util.js';\n\n/**\n * ---------------------------\n * The ListenerRegistration class\n * ---------------------------\n */\n\nexport default class ListenerRegistration extends Registration {\n\t\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.emit.currentRegistration = this;\n\t\tObject.defineProperty( this, 'abortController', { value: new AbortController } );\n\t\tObject.defineProperty( this, 'signal', { value: this.abortController.signal } );\n\t\tenv.setMaxListeners?.( 0, this.signal );\n\t}\n\n\t/**\n\t * De-registers the instance.\n\t * \n\t * @return Void\n\t */\n\tremove() {\n\t\tthis.abortController.abort();\n\t\tsuper.remove();\n\t}\n\n\t/**\n\t * Calls the observer's handler function\n\t * on matching with the event's fields.\n\t *\n\t * @param Array\t\t\t \t\tevents\n\t *\n\t * @return Any\n\t */\n\tfire( events ) {\n\t\tif ( this.emit.recursionTarget && ![ 'inject', 'force-async', 'force-sync' ].includes( this.params.recursions ) ) return;\n\t\tlet matches = events, filter = this.filter;\n\t\tif ( filter !== Infinity && ( filter = _arrFrom( filter, false ) ) ) {\n\t\t\tmatches = events.filter( event => filter.includes( event.key ) );\n\t\t}\n\t\tif ( this.params.diff ) {\n\t\t\tmatches = matches.filter( event => event.type !== 'set' || event.value !== event.oldValue );\n\t\t}\n\t\tif ( !matches.length ) return;\n\t\tif ( [ 'inject', 'defer' ].includes( this.params.recursions ) ) {\n\t\t\tif ( this.emit.recursionTarget ) {\n\t\t\t\tthis.emit.recursionTarget.push( ...matches );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.emit.recursionTarget = this.params.recursions === 'inject' ? matches : [];\n\t\t}\n\t\tconst $ret = this.filter === Infinity || Array.isArray( this.filter )\n\t\t\t? this.emit( matches, this )\n\t\t\t: this.emit( matches[ 0 ], this );\n\t\t// NOTEL: on calling emit(), this registration has expired and a new one active!!!\n\t\treturn _await( $ret, ret => {\n\t\t\tconst recursions = this.emit.recursionTarget;\n\t\t\tdelete this.emit.recursionTarget;\n\t\t\tif ( this.params.recursions === 'defer' ) {\n\t\t\t\tif ( recursions?.length ) return this.emit.currentRegistration.fire( recursions );\n\t\t\t}\n\t\t\treturn ret;\n\t\t} );\n\t}\n}\n", "\n/**\n * @imports\n */\nimport { _isTypeObject, _getType } from '@webqit/util/js/index.js';\nimport { _from as _arrFrom, _intersect, _equals as _arrEquals } from '@webqit/util/arr/index.js';\nimport { _wq } from '../util.js';\n\n/**\n * ---------------------------\n * The Registry class\n * ---------------------------\n */\n\nexport default class Registry {\n\t\n\t/**\n\t * Initializes the instance.\n\t *\n\t * @param object\ttarget\n\t * \n\t * @return void\n\t */\n\tconstructor( target ) {\n\t\tthis.target = target;\n\t\tthis.entries = [];\n\t}\n\t\n\t/**\n\t * Adds an Registration instance\n\t * with optional tags.\n\t *\n\t * @param Registration\t\tregistration\n\t *\n\t * @return Registration\n\t */\n\taddRegistration( registration ) {\n\t\tthis.entries.push( registration );\n\t\treturn registration;\n\t}\n\t\n\t/**\n\t * Removes registrations by reference.\n\t *\n\t * @param Registration\t\tregistration\n\t *\n\t * @return void\n\t */\n\tremoveRegistration( registration ) {\n\t\tthis.entries = this.entries.filter( _entry => _entry !== registration );\n\t}\n\t\t\n\t/**\n\t * Returns a observer-specific object embedded on an element.\n\t *\n\t * @param string\t\ttype\n\t * @param array|object\ttarget\n\t * @param bool      \tcreateIfNotExists\n\t * @param string      \tnamespace\n\t *\n\t * @return Registry\n\t */\n\tstatic _getInstance( type, target, createIfNotExists = true, namespace = this.__namespace ) {\n\t\tif ( !_isTypeObject( target ) ) throw new Error( `Subject must be of type object; \"${ _getType( target ) }\" given!` );\n\t\tlet ImplementationClass = this;\n\t\tif ( namespace && _wq( globalThis, 'observerAPI', 'namespaces' ).has( type + '-' + namespace ) ) {\n\t\t\tImplementationClass = _wq( globalThis, 'observerAPI', 'namespaces' ).get( type + '-' + namespace );\n\t\t\ttype += '-' + namespace\n\t\t}\n\t\tif ( !_wq( target, 'registry' ).has( type ) && createIfNotExists ) {\n\t\t\t_wq( target, 'registry' ).set( type, new ImplementationClass( target ) );\n\t\t}\n\t\treturn _wq( target, 'registry' ).get( type );\n\t}\n\n\t/**\n\t * Extend a Fireable Class with a namespace.\n\t *\n\t * @param string\t\tnamespace\n\t * @param class      \tImplementationClass\n\t *\n\t * @return void|class\n\t */\n\tstatic _namespace( type, namespace, ImplementationClass = null ) {\n\t\ttype += '-' + namespace;\n\t\tif ( arguments.length === 2 ) return _wq( globalThis, 'observerAPI', 'namespaces' ).get( type );\n\t\tif ( !( ImplementationClass.prototype instanceof this ) ) {\n\t\t\tthrow new Error( `The implementation of the namespace ${ this.name }.${ namespace } must be a subclass of ${ this.name }.` );\n\t\t}\n\t\t_wq( globalThis, 'observerAPI', 'namespaces' ).set( type, ImplementationClass );\n\t\tImplementationClass.__namespace = namespace;\n\t}\n}", "\n/**\n * ---------------------------\n * The Descriptor class\n * ---------------------------\n */\n\nexport default class Descriptor {\n\t\n\t/**\n\t * Initializes the instance.\n\t *\n\t * @param array|object\ttarget\n\t * @param object\t\tdfn\n\t *\n\t * @return void\n\t */\n\tconstructor( target, dfn ) {\n\t\tthis.target = target;\n\t\tif ( !( dfn.operation ) ) throw new Error( 'Descriptor operation must be given in definition!' );\n\t\tObject.assign( this, dfn );\n\t}\n}", "\n/**\n * @imports\n */\nimport ListenerRegistration from './ListenerRegistration.js';\nimport Registry from './Registry.js';\nimport { _await } from '../util.js';\nimport Descriptor from './Descriptor.js';\n\n/**\n * ---------------------------\n * The ListenerRegistry class\n * ---------------------------\n */\n\nexport default class ListenerRegistry extends Registry {\n\n\tstatic getInstance( target, createIfNotExists = true, namespace = null ) {\n\t\treturn super._getInstance( 'listeners', ...arguments );\n\t}\n\n\tstatic namespace( namespace, ImplementationClass = null ) {\n\t\treturn super._namespace( 'listeners', ...arguments );\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor( target ) {\n\t\tsuper( target );\n\t\tthis.batches = [];\n\t}\n\t\n\t/**\n\t * @addRegistration\n\t */\n\taddRegistration( filter, emit, params ) {\n\t\treturn super.addRegistration( new ListenerRegistration( this, { filter, emit, params } ) );\n\t}\n\t\n\t/**\n\t * Fires all observers with the given evt (change).\n\t *\n\t * @param Arrayn events\n\t *\n\t * @return Void\n\t */\n\temit( events, { eventsArePropertyDescriptors = false, eventIsArrayMethodDescriptor = false } = {} ) {\n\t\tif ( this.batches.length ) {\n\t\t\tconst arrayMethodName = this.batches[ 0 ].params.arrayMethodName;\n\t\t\tthis.batches[ 0 ].snapshots.push( {\n\t\t\t\tevents: [ ...events ],\n\t\t\t\tarrayMethodName, // Typically from array operations\n\t\t\t\teventsArePropertyDescriptors, // Typically from defineProperty() operations\n\t\t\t\teventIsArrayMethodDescriptor // Typically from array method operations\n\t\t\t} );\n\t\t\treturn\n\t\t}\n\t\tthis.$emit( this.entries, [ {\n\t\t\tevents, \n\t\t\teventsArePropertyDescriptors, // Typically from defineProperty() operations\n\t\t\teventIsArrayMethodDescriptor // Typically from array method operations\n\t\t} ] );\n\t}\n\n\t$emit( listeners, snapshots ) {\n\t\t// Analyse listener modes\n\t\tlet listenersLength = 0,\n\t\tlistenersAskingEventsWithPropertyDescriptors = 0,\n\t\tlistenersAskingArrayMethodDescriptors = 0;\n\t\tfor ( const listener of listeners ) {\n\t\t\tlistenersLength += 1;\n\t\t\tif ( listener.params.withPropertyDescriptors ) {\n\t\t\t\tlistenersAskingEventsWithPropertyDescriptors += 1;\n\t\t\t}\n\t\t\tif ( listener.params.withArrayMethodDescriptors ) {\n\t\t\t\tlistenersAskingArrayMethodDescriptors += 1;\n\t\t\t}\n\t\t}\n\t\t// Sort events\n\t\tconst events_with_PropertyDescriptors_with_ArrayMethodDescriptors = [], events_with_PropertyDescriptors_without_ArrayMethodDescriptors = [];\n\t\tconst events_without_PropertyDescriptors_with_ArrayMethodDescriptors = [], events_without_PropertyDescriptors_without_ArrayMethodDescriptors = [];\n\t\tfor ( const snapshot of snapshots ) {\n\t\t\tconst arrayMethodName = snapshot.arrayMethodName;\n\t\t\tconst eventsArePropertyDescriptors = snapshot.eventsArePropertyDescriptors;\n\t\t\tconst eventIsArrayMethodDescriptor = snapshot.eventIsArrayMethodDescriptor;\n\t\t\tfor ( const event of snapshot.events ) {\n\t\t\t\tif ( arrayMethodName ) {\n\t\t\t\t\tevent.operation = arrayMethodName;\n\t\t\t\t}\n\t\t\t\t// Some opting in to PropertyDescriptors\n\t\t\t\tif ( listenersAskingEventsWithPropertyDescriptors ) {\n\t\t\t\t\t//if ( !arrayMethodName ) { }\n\t\t\t\t\tlistenersAskingArrayMethodDescriptors && // Some opting in to ArrayMethodDescriptors\n\t\t\t\t\tevents_with_PropertyDescriptors_with_ArrayMethodDescriptors.push( event );\n\t\t\t\t\tif ( !eventIsArrayMethodDescriptor ) {\n\t\t\t\t\t\tlistenersAskingArrayMethodDescriptors !== listenersLength && // Some opting out of ArrayMethodDescriptors\n\t\t\t\t\t\tevents_with_PropertyDescriptors_without_ArrayMethodDescriptors.push( event );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Some opting out of PropertyDescriptors\n\t\t\t\tif ( listenersAskingEventsWithPropertyDescriptors !== listenersLength ) {\n\t\t\t\t\tlet $event = event;\n\t\t\t\t\tif ( eventsArePropertyDescriptors ) {\n\t\t\t\t\t\tconst { target, type, ...details } = event;\n\t\t\t\t\t\t$event = new Descriptor( target, { type: 'set', ...details } );\n\t\t\t\t\t\tObject.defineProperty( $event, 'value', 'get' in details.value ? { get: () => details.value.get() } : { value: details.value.value } )\n\t\t\t\t\t\tif ( details.oldValue ) {\n\t\t\t\t\t\t\tObject.defineProperty( $event, 'oldValue', 'get' in details.oldValue ? { get: () => details.oldValue.get() } : { value: details.oldValue.value } )\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//if ( !arrayMethodName/*Although eedless as is typically mutually exclusive to eventsArePropertyDescriptors*/ ) { }\n\t\t\t\t\tlistenersAskingArrayMethodDescriptors && // Some opting in to ArrayMethodDescriptors\n\t\t\t\t\tevents_without_PropertyDescriptors_with_ArrayMethodDescriptors.push( $event );\n\t\t\t\t\tif ( !eventIsArrayMethodDescriptor ) { // Although eedless as is typically already implied by eventsArePropertyDescriptors\n\t\t\t\t\t\tlistenersAskingArrayMethodDescriptors !== listenersLength && // Some opting out of ArrayMethodDescriptors\n\t\t\t\t\t\tevents_without_PropertyDescriptors_without_ArrayMethodDescriptors.push( $event );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Dispatch\n\t\tfor ( const listener of listeners ) {\n\t\t\tif ( listener.params.withPropertyDescriptors ) {\n\t\t\t\tif ( listener.params.withArrayMethodDescriptors ) {\n\t\t\t\t\tevents_with_PropertyDescriptors_with_ArrayMethodDescriptors.length &&\n\t\t\t\t\tlistener.fire( events_with_PropertyDescriptors_with_ArrayMethodDescriptors );\n\t\t\t\t} else {\n\t\t\t\t\tevents_with_PropertyDescriptors_without_ArrayMethodDescriptors.length &&\n\t\t\t\t\tlistener.fire( events_with_PropertyDescriptors_without_ArrayMethodDescriptors );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( listener.params.withArrayMethodDescriptors ) {\n\t\t\t\t\tevents_without_PropertyDescriptors_with_ArrayMethodDescriptors.length &&\n\t\t\t\t\tlistener.fire( events_without_PropertyDescriptors_with_ArrayMethodDescriptors );\n\t\t\t\t} else {\n\t\t\t\t\tevents_without_PropertyDescriptors_without_ArrayMethodDescriptors.length &&\n\t\t\t\t\tlistener.fire( events_without_PropertyDescriptors_without_ArrayMethodDescriptors );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Fires all observers with the given evt (change).\n\t *\n\t * @param Arrayn events\n\t *\n\t * @return Void\n\t */\n\tbatch( callback, params = {} ) {\n\t\tthis.batches.unshift( { entries: [ ...this.entries ], snapshots: [], params } );\n\t\tconst returnValue = callback();\n\t\treturn _await( returnValue, returnValue => {\n\t\t\tconst batch = this.batches.shift();\n\t\t\tif ( !batch.snapshots.length ) return returnValue;\n\t\t\tthis.$emit( batch.entries, batch.snapshots );\n\t\t\treturn returnValue;\n\t\t} );\n\t}\n\n}\n", "\n/**\n * @imports\n */\nimport Registration from './Registration.js';\n\n/**\n * ---------------------------\n * The TrapsRegistration class\n * ---------------------------\n */\n\nexport default class TrapsRegistration extends Registration {\n\t\n\t/**\n\t * Calls the observer's handler function\n\t * on matching with the descriptor's fields.\n\t *\n\t * @param Descriptor\t\t\t \tdescriptor\n\t * @param function\t\t\t\t\tnext\n\t * @param mixed\t\t\t\t\t \trecieved\n\t *\n\t * @return void\n\t */\n\texec( descriptor, next, recieved ) {\n\t\tif ( this.running || !this.traps[ descriptor.operation ] ) {\n\t\t\treturn next( ...Array.prototype.slice.call( arguments, 2 ) );\n\t\t}\n\t\tthis.running = true;\n\t\treturn this.traps[ descriptor.operation ]( descriptor, recieved, ( ...args ) => {\n\t\t\tthis.running = false;\n\t\t\treturn next( ...args );\n\t\t} );\n\t}\n}", "\n/**\n * @imports\n */\nimport TrapsRegistration from './TrapsRegistration.js';\nimport Registry from './Registry.js';\n\n/**\n * ---------------------------\n * The TrapsRegistry class\n * ---------------------------\n */\n\nexport default class TrapsRegistry extends Registry {\n\n\tstatic getInstance( target, createIfNotExists = true, namespace = null ) {\n\t\treturn super._getInstance( 'traps', ...arguments );\n\t}\n\n\tstatic namespace( namespace, ImplementationClass = null ) {\n\t\treturn super._namespace( 'traps', ...arguments );\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\taddRegistration( dfn ) {\n\t\treturn super.addRegistration( new TrapsRegistration( this, dfn ) );\n\t}\n\n\t/**\n\t * Fires all interceptors with the given action.\n\t *\n\t * @param Descriptor\t\tdescriptor\n\t * @param function\t\t\tdefaultHandler\n\t *\n\t * @return mixed\n\t */\n\temit( descriptor, defaultHandler = null ) {\n\t\tconst $this = this;\n\t\treturn ( function next( index, ..._args ) {\n\t\t\tconst registration = $this.entries[ index ];\n\t\t\tif ( registration ) {\n\t\t\t\treturn registration.exec( descriptor, ( ...args ) => {\n\t\t\t\t\treturn next( index + 1, ...args );\n\t\t\t\t}/*next*/, ..._args );\n\t\t\t}\n\t\t\treturn defaultHandler ? defaultHandler( descriptor, ..._args ) : _args[ 0 ];\n\t\t} )( 0 );\n\t}\n}", "\n/**\n * @imports\n */\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\nimport { _isClass, _isFunction, _isTypeObject, _getType } from '@webqit/util/js/index.js';\nimport { set, deleteProperty, has, get, ownKeys, defineProperty, getOwnPropertyDescriptor } from \"./main.js\";\nimport { apply, construct, getPrototypeOf, setPrototypeOf, isExtensible, preventExtensions } from \"./main.js\";\nimport { _wq } from './util.js';\n\n/* ---------------ACCESSORIZE METHODS--------------- */\n\n/**\n * Accessorizes props.\n *\n * @param Array|Object\ttarget\n * @param String|Array\tprops\n * @param Object\t\tparams\n *\n * @return Array\n */\nconst symWQOriginal = Symbol('wqOriginal');\nexport function accessorize( target, props, params = {} ) {\n    target = resolveTarget( target );\n    const accessorizedProps = _wq( target, 'accessorizedProps' );\n    // ---------\n    function getDescriptorDeep( prop ) {\n        let descriptor, proto = target;\n        do {\n            descriptor = Object.getOwnPropertyDescriptor( proto, prop );\n        } while ( !descriptor && ( proto = Object.getPrototypeOf( proto ) ) );\n        return descriptor \n            ? { proto, descriptor } \n            : { descriptor: { value: undefined, configurable: true, enumerable: true, writable: true } };\n    }\n    // ---------\n    function accessorizeProp( prop ) {\n        if ( accessorizedProps.has( prop + '' ) ) return true;\n        // ------------------\n        // Current Descriptor Record\n        const currentDescriptorRecord = getDescriptorDeep( prop );\n        currentDescriptorRecord.getValue = function( withPropertyDescriptors = false ) {\n            if ( withPropertyDescriptors ) return this.descriptor;\n            return this.descriptor.get ? this.descriptor.get() : this.descriptor.value;\n        };\n        currentDescriptorRecord.setValue = function( value, withPropertyDescriptors = false ) {\n            this.dirty = true;\n            if ( withPropertyDescriptors ) { this.descriptor = value; return; }\n            return this.descriptor.set ? this.descriptor.set( value ) !== false : ( this.descriptor.value = value, true );\n        };\n        currentDescriptorRecord.intact = function() {\n            const currentDescriptor = Object.getOwnPropertyDescriptor( target, prop );\n            return currentDescriptor?.get === accessorization.get \n                && currentDescriptor?.set === accessorization.set\n                && accessorizedProps.get( prop + '' ) === this;\n        };\n        currentDescriptorRecord.restore = function() {\n            if ( !this.intact() ) return false;\n            if ( ( this.proto && this.proto !== target ) || ( !this.proto && !this.dirty ) ) { delete target[ prop ]; }\n            else { Object.defineProperty( target, prop, this.descriptor ); }\n            accessorizedProps.delete( prop + '' );\n            return true;\n        };\n        accessorizedProps.set( !isNaN( prop ) ? parseInt( prop ) : prop, currentDescriptorRecord );\n        // ------------------\n        // enumerable, configurable\n        const { enumerable = true } = currentDescriptorRecord.descriptor;\n        const accessorization = { enumerable, configurable: true };\n        // set, get\n        if ( ( 'value' in currentDescriptorRecord.descriptor ) || currentDescriptorRecord.descriptor.set ) {\n            accessorization.set = function ( value ) { return set( this, prop, value, params ); };\n        }\n        if ( ( 'value' in currentDescriptorRecord.descriptor ) || currentDescriptorRecord.descriptor.get ) {\n            accessorization.get = function () { return get( this, prop, params ); };\n        }\n        try {\n            Object.defineProperty( target, prop, accessorization );\n            return true;\n        } catch( e ) {\n            accessorizedProps.delete( prop + '' );\n            return false;\n        }\n    }\n    const _props = Array.isArray( props ) ? props : (\n        props === undefined ? Object.keys( target ) : [ props ]\n    );\n    const statuses = _props.map( accessorizeProp );\n    return props === undefined || Array.isArray( props ) \n        ? statuses \n        : statuses[ 0 ];\n}\n\n/**\n * Unaccessorizes previously accessorized props.\n *\n * @param Array|Object\ttarget\n * @param String|Array\tprops\n * @param Object\t\tparams\n *\n * @return Array\n */\nexport function unaccessorize( target, props, params = {} ) {\n    target = resolveTarget( target );\n    const accessorizedProps = _wq( target, 'accessorizedProps' );\n    function unaccessorizeProp( prop ) {\n        if ( !accessorizedProps.has( prop + '' ) ) return true;\n        return accessorizedProps.get( prop + '' ).restore();\n    }\n    const _props = Array.isArray( props ) ? props : (\n        props === undefined ? Object.keys( target ) : [ props ]\n    );\n    const statuses = _props.map( unaccessorizeProp );\n    return props === undefined || Array.isArray( props ) \n        ? statuses \n        : statuses[ 0 ];\n}\n\n/* ---------------PROXY METHODS--------------- */\n\n/**\n * Returns an object as a proxy and binds all instance methods\n * to the proxy instead of the object itself.\n *\n * @param Array|Object\t\ttarget\n * @param Object\t\t    params\n * @param Function\t\t    extendCallback\n *\n * @return Proxy\n */\nexport function proxy( target, params = {}, extendCallback = undefined ) {\n    // Resolve target\n    const originalTarget = resolveTarget( target );\n    // Return same proxy instance?\n    if ( typeof params.membrane === 'boolean' ) throw new Error( `The params.membrane parameter cannot be of type boolean.` );\n    if ( params.membrane && _wq( originalTarget, 'membraneRef' ).has( params.membrane ) ) { return _wq( originalTarget, 'membraneRef' ).get( params.membrane ); }\n    const traps = {\n        apply: ( target, thisArgument, argumentsList ) => apply( target, thisArgument, argumentsList, undefined, params ),\n        construct:  ( target, argumentsList, newTarget = null ) => construct( target, argumentsList, newTarget, params ),\n        defineProperty:  ( target, propertyKey, attributes ) => defineProperty( target, propertyKey, attributes, params ),\n        deleteProperty: ( target, propertyKey ) => deleteProperty( target, propertyKey, params ),\n        get: ( target, propertyKey, receiver = null ) => {\n            if ( propertyKey === symWQOriginal ) {\n                return originalTarget;\n            }\n            const $params = { ...params, receiver };\n            const returnValue = get( target, propertyKey, $params );\n            // Auto-wrap array methods\n            if ( Array.isArray( target ) && typeof returnValue === 'function' && !/^class\\s?|\\{\\s\\[native\\scode\\]\\s\\}$/.test(Function.prototype.toString.call( returnValue ) ) ) {\n                return proxy( returnValue, { ...params, arrayMethodName: propertyKey, membrane: receiver/* the instance obj that will be the thisArgument at apply(). Much like function.bind() */ }, extendCallback );\n            }\n            // Auto-wrap others if so specified\n            if ( params.chainable && _isTypeObject( returnValue ) && propertyKey !== 'prototype' && !( typeof returnValue === 'function' && /^class\\s?|\\{\\s\\[native\\scode\\]\\s\\}$/.test(Function.prototype.toString.call( target ) ) ) ) {\n                return proxy( returnValue, params, extendCallback );\n            }\n            return returnValue;\n        },\n        getOwnPropertyDescriptor: ( target, propertyKey ) => getOwnPropertyDescriptor( target, propertyKey, params ),\n        getPrototypeOf: target => getPrototypeOf( target, params ),\n        has: ( target, propertyKey ) => has( target, propertyKey, params ),\n        isExtensible: target => isExtensible( target, params ),\n        ownKeys: target => ownKeys( target, params ),\n        preventExtensions: target => preventExtensions( target, params ),\n        set: ( target, propertyKey, value, receiver = null ) => set( target, propertyKey, value, { ...params, receiver } ),\n        setPrototypeOf: ( target, prototype ) => setPrototypeOf( target, prototype, params ),\n    };\n    // Extend...\n    const $traps = extendCallback?.( traps ) || traps;\n    // Create proxy\n    const $proxy = new Proxy( originalTarget, $traps );\n    if ( params.membrane ) { _wq( originalTarget, 'membraneRef' ).set( params.membrane, $proxy ); }\n\treturn $proxy;\n}\n\n/**\n * Returns the original object earlier proxied by proxy().\n *\n * @param Proxy|Any\t\ttarget\n *\n * @return Any\n */\nexport function unproxy( target ) {\n    // Proxy targets are mapped to their own instances internally\n    return target && target[ symWQOriginal ] || target;\n}\n\n/* ---------------HELPERS--------------- */\n\n/** \n * Ensures target object is an object or array.\n *\n * @param Array|Object\ttarget\n *\n * @return Array|Object\n */\nfunction resolveTarget( target ) {\n\tif ( !target || !_isTypeObject( target ) ) throw new Error('Target must be of type object!');\n\treturn unproxy( target );\n}\n", "\n/**\n * @imports\n */\nimport * as main from './main.js';\nimport * as actors from './actors.js';\n\nconst Observer = { ...main, ...actors };\n\nexport default Observer;", "\n/**\n * @imports\n */\nimport Observer from './index.js';\n\n// As globals\nif ( !self.webqit ) { self.webqit = {}; }\nself.webqit.Observer = Observer;"],
  "mappings": "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",
  "names": ["main_exports", "__export", "any", "apply", "batch", "construct", "defineProperties", "defineProperty", "deleteProperties", "deleteProperty", "get", "getOwnPropertyDescriptor", "getOwnPropertyDescriptors", "getPrototypeOf", "has", "intercept", "isExtensible", "map", "observe", "ownKeys", "path", "preventExtensions", "reduce", "set", "setPrototypeOf", "subtree", "isObject_default", "val", "getType_default", "val", "isArray_default", "val", "isTypeFunction_default", "val", "isNull_default", "val", "isUndefined_default", "val", "isTypeObject_default", "val", "isTypeFunction_default", "isEmpty_default", "val", "isNull_default", "isUndefined_default", "isTypeObject_default", "isFunction_default", "val", "isTypeFunction_default", "isString_default", "val", "isTypeArray_default", "val", "isString_default", "isUndefined_default", "wq", "obj", "namespaces", "WQInternals", "_ns", "_wq", "from_default", "val", "castObject", "isArray_default", "isObject_default", "isEmpty_default", "isTypeArray_default", "_wq", "target", "args", "wq", "_await", "value", "callback", "env", "Registration", "registry", "dfn", "ListenerRegistration", "Registration", "env", "events", "matches", "filter", "from_default", "event", "$ret", "_await", "ret", "recursions", "Registry", "target", "registration", "_entry", "type", "createIfNotExists", "namespace", "isTypeObject_default", "getType_default", "ImplementationClass", "_wq", "Descriptor", "target", "dfn", "ListenerRegistry", "Registry", "target", "createIfNotExists", "namespace", "ImplementationClass", "filter", "emit", "params", "ListenerRegistration", "events", "eventsArePropertyDescriptors", "eventIsArrayMethodDescriptor", "arrayMethodName", "listeners", "snapshots", "listenersLength", "listenersAskingEventsWithPropertyDescriptors", "listenersAskingArrayMethodDescriptors", "listener", "events_with_PropertyDescriptors_with_ArrayMethodDescriptors", "events_with_PropertyDescriptors_without_ArrayMethodDescriptors", "events_without_PropertyDescriptors_with_ArrayMethodDescriptors", "events_without_PropertyDescriptors_without_ArrayMethodDescriptors", "snapshot", "event", "$event", "type", "details", "Descriptor", "callback", "returnValue", "_await", "batch", "TrapsRegistration", "Registration", "descriptor", "next", "recieved", "args", "TrapsRegistry", "Registry", "target", "createIfNotExists", "namespace", "ImplementationClass", "dfn", "TrapsRegistration", "descriptor", "defaultHandler", "$this", "next", "index", "_args", "registration", "args", "actors_exports", "__export", "accessorize", "proxy", "unaccessorize", "unproxy", "symWQOriginal", "accessorize", "target", "props", "params", "resolveTarget", "accessorizedProps", "_wq", "getDescriptorDeep", "prop", "descriptor", "proto", "accessorizeProp", "currentDescriptorRecord", "withPropertyDescriptors", "value", "currentDescriptor", "accessorization", "enumerable", "set", "get", "statuses", "unaccessorize", "unaccessorizeProp", "proxy", "extendCallback", "originalTarget", "traps", "thisArgument", "argumentsList", "apply", "newTarget", "construct", "propertyKey", "attributes", "defineProperty", "deleteProperty", "receiver", "$params", "returnValue", "isTypeObject_default", "getOwnPropertyDescriptor", "getPrototypeOf", "has", "isExtensible", "ownKeys", "preventExtensions", "prototype", "setPrototypeOf", "$traps", "$proxy", "unproxy", "Path", "path", "segments", "Subtree", "subtree", "any", "reduce", "target", "receiver", "final", "x", "params", "_isSubtree", "eat", "$params", "$isSubtree", "isSubtree", "segment", "isLastSegment", "Descriptor", "result", "args", "addTrail", "desc", "flags", "advance", "$value", "resolveObj", "_await", "isPropsList", "entry", "observe", "prop", "originalTarget", "isFunction_default", "getType_default", "isTypeObject_default", "get", "emit", "bind", "intercept", "traps", "isObject_default", "TrapsRegistry", "getOwnPropertyDescriptor", "exec", "getOwnPropertyDescriptors", "getPrototypeOf", "isExtensible", "ownKeys", "has", "isLive", "resolveProps", "props", "related", "next", "results", "_props", "_done", "defaultGet", "descriptor", "value", "_next", "accessorizedProps", "_wq", "accessorization", "trapsRegistry", "result_s", "batch", "callback", "ListenerRegistry", "map", "source", "only", "except", "sourceKeys", "k", "filteredKeys", "resolveKey", "i", "doSet", "key", "set", "defineProperty", "mutations", "m", "deleteProperty", "def", "entries", "descriptors", "defaultSet", "status", "isUpdate", "oldValue", "exists", "listenerRegistry", "opr", "defineProperties", "from_default", "defaultDel", "deleteProperties", "construct", "argumentsList", "newTarget", "apply", "thisArgument", "originalThis", "unproxy", "returnValue", "setPrototypeOf", "proto", "preventExtensions", "controller", "env", "childRegistrations", "descriptor_s", "prevRegistration", "registrationNext", "isExisting", "handlerReturnValue", "operation", "payload", "defaultExec", "obj", "assert", "probePropertyDescriptors", "p", "name", "Observer", "main_exports", "actors_exports", "src_default", "src_default"]
}
