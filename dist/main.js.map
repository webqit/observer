{
  "version": 3,
  "sources": ["../src/main.js", "../node_modules/@webqit/util/js/isObject.js", "../node_modules/@webqit/util/js/getType.js", "../node_modules/@webqit/util/js/isArray.js", "../node_modules/@webqit/util/arr/intersect.js", "../node_modules/@webqit/util/js/internals.js", "../node_modules/@webqit/util/js/isTypeFunction.js", "../node_modules/@webqit/util/js/isClass.js", "../node_modules/@webqit/util/js/isNull.js", "../node_modules/@webqit/util/js/isUndefined.js", "../node_modules/@webqit/util/js/isTypeObject.js", "../node_modules/@webqit/util/js/isEmpty.js", "../node_modules/@webqit/util/js/isFunction.js", "../node_modules/@webqit/util/js/isString.js", "../node_modules/@webqit/util/js/isTypeArray.js", "../node_modules/@webqit/util/arr/from.js", "../src/core/Registration.js", "../src/util.js", "../src/core/ListenerRegistration.js", "../src/core/Registry.js", "../src/core/ListenerRegistry.js", "../src/core/TrapsRegistration.js", "../src/core/TrapsRegistry.js", "../src/core/Descriptor.js", "../src/actors.js", "../src/index.js", "../src/targets.browser.js"],
  "sourcesContent": ["\n/**\n * @imports\n */\nimport { _isObject, _isTypeObject, _isFunction, _getType } from '@webqit/util/js/index.js';\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\nimport ListenerRegistry from './core/ListenerRegistry.js';\nimport TrapsRegistry from './core/TrapsRegistry.js';\nimport Descriptor from './core/Descriptor.js';\nimport { unproxy } from './actors.js';\nimport { _, _await } from './util.js';\n\n/* ---------------SPECIAL APIs--------------- */\n\n/**\n * Creates a Path array instance from arguments.\n * \n * @param Array\t            ...segments\n *\n * @return Path\n */\nclass Path extends Array {}\nexport function path( ...segments ) {\n    return new Path( ...segments );\n}\n\n/**\n * Reduces a path array against handler.\n * \n * @param Array|Object\t    target\n * @param Array\t            path\n * @param Function\t        receiver\n * @param Function\t        final\n * @param Object\t        params\n * \n * @example reduce( object, [ segement1, segement2 ], observe, ( value, flags ) => {}, params );\n *\n * @return Any\n */\nexport function reduce( target, path, receiver, final = x => x, params = {} ) {\n    if ( !path.length ) return;\n    return ( function eat( target, path, $params ) {\n        const segment = path[ $params.level ];\n        const isLastSegment = $params.level === path.length - 1;\n        if ( target instanceof Descriptor && target.type !== 'get' ) {\n            // Always probe event-generated trees\n            $params = { ...$params, probe: 'always' };\n        } else if ( $params.probe !== 'always' ) {\n            // Probe until (before) last segment\n            $params = { ...$params, probe: !isLastSegment };\n        }\n        // ---------------\n        return receiver( target, segment, ( result, ...args ) => {\n            // -----------\n            const addTrail = desc => {\n                if ( !( desc instanceof Descriptor ) ) return;\n                desc.path = [ desc.key ];\n                if ( target instanceof Descriptor ) {\n                    desc.path = target.path.concat( desc.key );\n                    Object.defineProperty( desc, 'context', { get: () => target, configurable: true } );\n                }\n            };\n            const advance = result => {\n                const $value = resolveObj( result/* a Descriptor who's value could be proxied */, false );\n                return _await( $value/* could be a promise */, $value => {\n                    if ( result instanceof Descriptor ) {\n                        result.value = $value; // Update to (fulfilled), unproxied, value\n                    } else {\n                        result = $value;\n                    }\n                    const flags = args[ 0 ] || {};\n                    return eat( result, path, { ...$params, ...flags, level: $params.level + 1, } );\n                } );\n            };\n            // -----------\n            if ( isPropsList( segment ) && Array.isArray( result ) ) {\n                result.forEach( addTrail );\n                if ( isLastSegment ) return final( result, ...args );\n                return result.map( advance );\n            }\n            // -----------\n            addTrail( result );\n            if ( isLastSegment ) return final( result, ...args );\n            return advance( result );\n            // -----------\n        }, $params );\n    } )( target, path.slice( 0 ), { ...params, level: 0 } );\n}\n\n/**\n * Adds an observer to a target's registry.\n *\n * @param Array|Object\t    target\n * @param String|Object\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return AbortController\n */\nexport function observe( target, prop, receiver, params = {} ) {\n    // ---------------\n    target = resolveObj( target, !params.level );\n\tif ( _isFunction( arguments[ 1 ] ) ) {\n        [ , receiver, params = {} ] = arguments;\n        prop = Infinity;\n\t}\n\tif ( !_isFunction( receiver ) ) throw new Error( `Handler must be a function; \"${ _getType( receiver ) }\" given!` );\n    if ( prop instanceof Path ) return reduce( target, prop, observe, receiver, params );\n    // ---------------\n    params = { ...params, descripted: true };\n    delete params.live;\n    if ( !_isTypeObject( target ) ) return params.probe && get( target, prop, receiver, params );\n    // ---------------\n    const emit = bind( target, prop, receiver, params );\n    if ( params.probe ) {\n        return get( target, prop, emit, params );\n    }\n    return emit();\n}\n\n/**\n * Adds an interceptor object to a target's registry.\n *\n * @param Array|Object\t    target\n * @param Object\t        traps\n * @param Object\t\t    params\n *\n * @return AbortRegistry\n */\nexport function intercept( target, traps, params = {} ) {\n    // ---------------\n    target = resolveObj( target );\n    if ( !_isObject( traps ) ) {\n        [ /*target*/, /*type*/, /*handler*/, params = {} ] = arguments;\n        traps = { [ arguments[ 1 ] ]: arguments[ 2 ] };\n    }\n    // ---------------\n    return TrapsRegistry.getInstance( target, true, params.namespace ).addRegistration( { traps, params } );\n}\n\n/* ---------------QUERY APIs--------------- */\n\n/**\n * Performs a \"getOwnPropertyDescriptor\" operation.\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function getOwnPropertyDescriptor( target, prop, receiver = x => x, params = {} ) {\n    return exec( target, 'getOwnPropertyDescriptor', { key: prop }, receiver, params );\n}\n\n/**\n * Performs a \"getOwnPropertyDescriptors\" operation.\n * @note this isn't part of the standard Reflect API.\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function getOwnPropertyDescriptors( target, prop, receiver = x => x, params = {} ) {\n    return exec( target, 'getOwnPropertyDescriptors', { key: prop }, receiver, params );\n}\n\n/**\n * Performs a \"getPrototypeOf\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function getPrototypeOf( target, receiver = x => x, params = {} ) {\n    return exec( target, 'getPrototypeOf', {}, receiver, params );\n}\n\n/**\n * Performs a \"isExtensible\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function isExtensible( target, receiver = x => x, params = {} ) {\n    return exec( target, 'isExtensible', {}, receiver, params );\n}\n\n/**\n * Performs a \"ownKeys\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function ownKeys( target, receiver = x => x, params = {} ) {\n    return exec( target, 'ownKeys', {}, receiver, params );\n}\n\n/**\n * Performs an operation of the given \"type\".\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function has( target, prop, receiver = x => x, params = {} ) {\n    return exec( target, 'has', { key: prop }, receiver, params );\n}\n\n/**\n * Performs a get operation.\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function get( target, prop, receiver = x => x, params = {} ) {\n    // ---------------\n    let isLive;\n    target = resolveObj( target, !params.level );\n    if ( _isObject( receiver ) ) { [ params, receiver ] = [ receiver, x => x ]; }\n    else if ( params.live ) { isLive = true; }\n    if ( prop instanceof Path ) return reduce( target, prop, get, receiver, params );\n    // ---------------\n    return resolveProps( target, prop, props => {\n        const related = [ ...props ];\n        return ( function next( results, _props, _done ) {\n            if ( !_props.length ) return _done( results );\n            const prop = _props.shift();\n            if ( ![ 'string', 'number', 'symbol' ].includes( typeof prop ) ) {\n                throw new Error( `Property name/key ${ prop } invalid.` );\n            }\n            // ---------\n            function defaultGet( descriptor, value = undefined ) {\n                const _next = value => ( descriptor.value = value, next( [ ...results, params.live || params.descripted ? descriptor : value ]/** not using concat() as value may be an array */, _props, _done ) );\n                if ( arguments.length > 1 ) return _next( value );\n                const accessorizedProps = _( target, 'accessorizedProps', false );\n                const accessorization = accessorizedProps && accessorizedProps.get( descriptor.key + '' );\n                if ( accessorization && accessorization.intact() ) {\n                    return _next( accessorization.getValue() );\n                }\n                return _next( Reflect.get( target, descriptor.key, ...( params.receiver ? [ params.receiver ] : [] ) ) );\n            }\n            // ---------\n            const descriptor = new Descriptor( target, {\n                type: 'get',\n                key: prop,\n                value: undefined,\n                related,\n            } );\n            if ( !_isTypeObject( target ) ) return next( [ ...results, params.live || params.descripted ? descriptor : undefined ], _props, _done );\n            const listenerRegistry = TrapsRegistry.getInstance( target, false, params.namespace );\n            if ( listenerRegistry ) {\n                return listenerRegistry.emit( descriptor, defaultGet );\n            }\n            return defaultGet( descriptor );\n        } )( [], props.slice( 0 ), results => {\n            const result_s = isPropsList( prop/*original*/ ) ? results : results[ 0 ];\n            if ( isLive && _isTypeObject( target ) ) {\n                const emit = bind( target, prop, receiver, params );\n                return emit( result_s );\n            }\n            return receiver( result_s );\n        } );\n    }, params );\n}\n\n/* ---------------MUTATION APIs--------------- */\n\n/**\n * Performs a batch operation.\n * \n * @param Object\t        target\n * @param Function\t        callback\n * @param Object\t        params\n *\n * @return Void\n */\nexport function batch( target, callback, params = {} ) {\n    target = resolveObj( target );\n    return ListenerRegistry.getInstance( target, true, params.namespace ).batch( callback );\n}\n\n/**\n * Performs a set operation.\n * \n * @param Object\t        target\n * @param String|Number\t    prop\n * @param Any\t            value\n * @param Function\t        receiver\n * @param Object\t        params\n * @param Bool\t            def\n *\n * @return Any\n */\nexport function set( target, prop, value, receiver = x => x, params = {}, def = false ) {\n    // ---------------\n    target = resolveObj( target );\n    let entries = [ [ prop, value ] ];\n    if ( _isObject( prop ) ) {\n        [ /*target*/, /*hash*/, receiver = x => x, params = {}, def = false ] = arguments;\n        entries = Object.entries( prop );\n    }\n    if ( _isObject( receiver ) ) { [ def, params, receiver ] = [ typeof params === 'boolean' ? params : false, receiver, x => x ]; }\n    // ---------------\n    const related = entries.map( ( [ prop ] ) => prop );\n    return ( function next( descriptors, entries, _done ) {\n        if ( !entries.length ) return _done( descriptors );\n        const [ prop, value ] = entries.shift();\n        // ---------\n        function defaultSet( descriptor, status = undefined ) {\n            const _next = status => ( descriptor.status = status, next( descriptors.concat( descriptor ), entries, _done ) );\n            if ( arguments.length > 1 ) return _next( descriptor, status );\n            const accessorizedProps = _( target, 'accessorizedProps', false );\n            const accessorization = accessorizedProps && accessorizedProps.get( descriptor.key + '' );\n            if ( descriptor.type === 'defineProperty' ) {\n                if ( accessorization && !accessorization.restore() ) _next( false );\n                Object.defineProperty( target, descriptor.key, descriptor.value );\n                return _next( true );\n            }\n            if ( accessorization && accessorization.intact() ) {\n                return _next( accessorization.setValue( descriptor.value ) );\n            }\n            return _next( Reflect.set( target, descriptor.key, descriptor.value ) );\n        }\n        // ---------\n        function exec( isUpdate, oldValue ) {\n            if ( params.diff && value === oldValue ) return next( descriptors, entries, _done );\n            const descriptor = new Descriptor( target, {\n                type: def ? 'defineProperty' : 'set',\n                key: prop,\n                value,\n                isUpdate,\n                oldValue,\n                related: [ ...related ],\n                detail: params.detail,\n            } );\n            const listenerRegistry = TrapsRegistry.getInstance( target, false, params.namespace );\n            return listenerRegistry \n                ? listenerRegistry.emit( descriptor, defaultSet ) \n                : defaultSet( descriptor );\n        }\n        // ---------\n        return has( target, prop, exists => {\n            if ( !exists ) return exec( exists );\n            return get( target, prop, oldValue => exec( exists, oldValue ), params );\n        }, params );\n        // ---------\n    } )( [], entries.slice( 0 ), descriptors => {\n        const listenerRegistry = ListenerRegistry.getInstance( target, false, params.namespace );\n        if ( listenerRegistry ) listenerRegistry.emit( descriptors );\n        return receiver(\n            isPropsList( prop/*original*/ ) ? descriptors.map( opr => opr.status ) : descriptors[ 0 ]?.status\n        );\n    } );\n}\n\n/**\n * Performs a defineProperty operation.\n * \n * @param Object\t        target\n * @param String|Number\t    prop\n * @param Object\t        descriptor\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function defineProperty( target, prop, descriptor, receiver = x => x, params = {} ) {\n    return set( target, prop, descriptor, receiver, params, true/*def*/ );\n}\n\n/**\n * Performs a defineProperties operation.\n * @note this isn't part of the standard Reflect API.\n * \n * @param Object\t        target\n * @param Object\t        descriptors\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function defineProperties( target, descriptors, receiver = x => x, params = {} ) {\n    return set( target, descriptors, receiver, params, true/*def*/ );\n}\n\n/**\n * Performs a delete operation.\n * \n * @param Object\t        target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function deleteProperty( target, prop, receiver = x => x, params = {} ) {\n    // ---------------\n    target = resolveObj( target );\n    if ( _isObject( receiver ) ) { [ params, receiver ] = [ receiver, x => x ]; }\n    // ---------------\n    const props = _arrFrom( prop, false ), related = [ ...props ];\n    return ( function next( descriptors, props, _done ) {\n        if ( !props.length ) return _done( descriptors );\n        const prop = props.shift();\n        // ---------\n        function defaultDel( descriptor, status = undefined ) {\n            const _next = status => ( descriptor.status = status, next( descriptors.concat( descriptor ), props, _done ) );\n            if ( arguments.length > 1 ) return _next( descriptor, status );\n            const accessorizedProps = _( target, 'accessorizedProps', false );\n            const accessorization = accessorizedProps && accessorizedProps.get( descriptor.key + '' );\n            if ( accessorization && !accessorization.restore() ) _next( false );\n            return _next( Reflect.deleteProperty( target, descriptor.key ) );\n        }\n        // ---------\n        function exec( oldValue ) {\n            const descriptor = new Descriptor( target, {\n                type: 'deleteProperty',\n                key: prop,\n                oldValue,\n                related: [ ...related ],\n                detail: params.detail,\n            } );\n            const listenerRegistry = TrapsRegistry.getInstance( target, false, params.namespace );\n            return listenerRegistry \n                ? listenerRegistry.emit( descriptor, defaultDel ) \n                : defaultDel( descriptor );\n        }\n        // ---------\n        return get( target, prop, exec, params );\n        // ---------\n    } )( [], props.slice( 0 ), descriptors => {\n        const listenerRegistry = ListenerRegistry.getInstance( target, false, params.namespace );\n        if ( listenerRegistry ) listenerRegistry.emit( descriptors );\n        return receiver(\n            isPropsList( prop/*original*/ ) ? descriptors.map( opr => opr.status ) : descriptors[ 0 ].status\n        );\n    } );\n}\n\n/**\n * @alias deleteProperty()\n */\nexport function deleteProperties( target, props, receiver = x => x, params = {} ) {\n    return deleteProperty( ...arguments );\n}\n\n/* ---------------EFFECT APIs--------------- */\n\n/**\n * Performs a \"construct\" operation.\n *\n * @param Array|Object\t    target\n * @param Array\t\t\t    argumentsList\n * @param Object\t\t    newTarget\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function construct( target, argumentsList, newTarget = null, receiver = x => x, params = {} ) {\n    return exec( target, 'construct', arguments.length > 2 ? { argumentsList, newTarget } : { argumentsList }, receiver, params );\n}\n\n/**\n * Performs an \"apply\" operation.\n *\n * @param Array|Object\t    target\n * @param Any\t            thisArgument\n * @param Array\t            argumentsList\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function apply( target, thisArgument, argumentsList, receiver = x => x, params = {} ) {\n    return exec( target, 'apply', { thisArgument, argumentsList }, receiver, params );\n}\n\n/**\n * Performs a \"setPrototypeOf\" operation.\n *\n * @param Array|Object\t    target\n * @param Anyr\t            proto\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function setPrototypeOf( target, proto, receiver = x => x, params = {} ) {\n    return exec( target, 'setPrototypeOf', { proto }, receiver, params );\n}\n\n/**\n * Performs a \"preventExtension\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function preventExtensions( target, receiver = x => x, params = {} ) {\n    return exec( target, 'preventExtensions', {}, receiver, params );\n}\n\n/* ---------------HELPER APIs--------------- */\n\n/**\n * Adds an observer to a target's registry.\n *\n * @param Array|Object\t    target\n * @param String|Object\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Function: AbortController\n */\nfunction bind( target, prop, receiver, params = {} ) {\n    let controller;\n    if ( !params.signal ) {\n        controller = new AbortController;\n        params = { ...params, signal: controller.signal };\n    }\n    const listenerRegistry = ListenerRegistry.getInstance( target, true, params.namespace );\n    return function emit( descriptor_s, prevRegistration = null ) {\n        prevRegistration?.remove();\n        const registrationNext = listenerRegistry.addRegistration( prop, emit, params );\n        const flags = { signal: registrationNext.signal, };\n        if ( arguments.length ) {\n            const handlerReturnValue = receiver( descriptor_s, flags );\n            if ( arguments.length > 1 ) return handlerReturnValue;\n        }\n        return controller;\n    };\n}\n\n/**\n * Performs an operation of the given \"type\".\n *\n * @param Array|Object\t    target\n * @param String\t\t    type\n * @param Object\t\t    payload\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nfunction exec( target, type, payload = {}, receiver = x => x, params = {} ) {\n    // ---------\n    target = resolveObj( target );\n    if ( _isObject( receiver ) ) { [ params, receiver ] = [ receiver, x => x ]; }    \n    // ---------\n    function defaultExec( descriptor, result ) {\n        if ( arguments.length > 1 ) return receiver( result );\n        return receiver( Reflect[ type ]( target, ...Object.values( payload ) ) );\n    }\n    // ---------\n    const descriptor = new Descriptor( target, { type, ...payload } );\n    const listenerRegistry = TrapsRegistry.getInstance( target, false, params.namespace );\n    if ( listenerRegistry ) {\n        return listenerRegistry.emit( descriptor, defaultExec );\n    }\n    return defaultExec( descriptor );\n}\n\n// Asks if prop is a multi-result field\nfunction isPropsList( prop ) {\n    return prop === Infinity || Array.isArray( prop );\n}\n\n// Resolves obj down to it's self\nfunction resolveObj( obj, assert = true ) {\n\tif ( ( !obj || !_isTypeObject( obj ) ) && assert ) throw new Error( `Object must be of type object or array! \"${ _getType( obj ) }\" given.` );\n    if ( obj instanceof Descriptor ) {\n        obj = obj.value;\n    }\n\treturn obj && unproxy( obj );\n}\n\n// Resolves prop down to actual keys\nfunction resolveProps( obj, prop, receiver, params = {} ) {\n    if ( prop === Infinity ) {\n        if ( params.level && !_isTypeObject( obj ) ) return receiver( [] );\n        return ownKeys( obj, receiver, params );\n    }\n    return receiver( _arrFrom( prop, false ) );\n}\n", "\r\n/**\r\n * Tells if val is pure object.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\r\n};\r\n", "\r\n/**\r\n * Returns the val's type.\r\n *\r\n * @param string \tval\r\n *\r\n * @return string\r\n */\r\nexport default function(val) {\r\n\treturn typeof val;\r\n};\r\n", "\r\n/**\r\n * Tells if val is of type \"array\".\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\n\r\n/**\r\n * Returns the intersection of two arrays;\r\n * optionally using a custom matching function.\r\n *\r\n * @param array \tarr\r\n * @param array\t \tarr2\r\n * @param function \tcallback\r\n *\r\n * @return array\r\n */\r\nexport default function(arr, arr2, callback = null) {\r\n\treturn !_isArray(arr2) ? [] : arr.filter(val1 => callback \r\n\t\t? arr2.filter(val2 => callback(val1, val2)).length \r\n\t\t: arr2.indexOf(val1) !== -1\r\n\t);\r\n};\r\n", "/**\r\n * @imports\r\n */\r\nimport _intersect from '../arr/intersect.js';\r\n\r\n/**\r\n * Creates and/or returns an \"internals\" object for the given object.\r\n * \r\n * @param Any obj\r\n * @param String namespace\r\n * \r\n * @return Object\r\n */\r\nexport default function internals(obj, ...namespaces) {\r\n    if (!globalThis.webqit) { globalThis.webqit = {}; }\r\n    if (!globalThis.webqit.refs) {\r\n        Object.defineProperty(globalThis.webqit, 'refs', {value: new ObservableMap})\r\n    }\r\n    if (!arguments.length) return globalThis.webqit.refs;\r\n    let itnls = globalThis.webqit.refs.get(obj);\r\n    if (!itnls) {\r\n        itnls = new ObservableMap;\r\n        globalThis.webqit.refs.set(obj, itnls);\r\n    }\r\n    let _ns, _itnls;\r\n    while ((_ns = namespaces.shift())) {\r\n        if ((_itnls = itnls) && !(itnls = itnls.get(_ns))) {\r\n            itnls = new ObservableMap;\r\n            _itnls.set(_ns, itnls);\r\n        }\r\n    }\r\n    return itnls;\r\n}\r\n\r\nclass ObservableMap extends Map {\r\n    constructor( ...args ) {\r\n        super( ...args );\r\n        this.observers = new Set;\r\n    }\r\n    set( key, value ) {\r\n        let returnValue = super.set( key, value );\r\n        this.fire( 'set', key, value, key );\r\n        return returnValue;\r\n    }\r\n    delete( key ) {\r\n        let returnValue = super.delete( key );\r\n        this.fire( 'delete', key );\r\n        return returnValue;\r\n    }\r\n    has( key ) {\r\n        this.fire( 'has', key );\r\n        return super.has( key );\r\n    }\r\n    get( key ) {\r\n        this.fire( 'get', key );\r\n        return super.get( key );\r\n    }\r\n    keyNames() { return Array.from( super.keys() ); }\r\n    observe( type, key, callback ) {\r\n        const entry = { type, key, callback };\r\n        this.observers.add( entry );\r\n        return () => this.observers.delete( entry );\r\n    }\r\n    unobserve( type, key, callback ) {\r\n        if ( Array.isArray( type ) || Array.isArray( key ) ) {\r\n            throw new Error( `The \"type\" and \"key\" arguments can only be strings.` );\r\n        }\r\n        for ( let entry of this.observers ) {\r\n            if ( !( _intersection( [ type, '*' ], entry.type ) && _intersection( [ key, '*' ], entry.key ) && entry.callback === callback ) ) continue;\r\n            this.observers.delete( entry );\r\n        }\r\n    }\r\n    fire( type, key, ...args ) {\r\n        // IMPORTANT: Array.from() must be used so that new additions to this.observers\r\n        // during the loop aren't picked up!\r\n        for ( let entry of this.observers ) {\r\n            if ( !( _intersection( [ type, '*' ], entry.type ) && _intersection( [ key, '*' ], entry.key ) ) ) continue;\r\n            entry.callback( ...args );\r\n        }\r\n    }\r\n}\r\n\r\nconst _intersection = ( a, b ) => {\r\n    if ( Array.isArray( b ) ) return _intersect( a, b ).length;\r\n    return a.includes( b );\r\n}\r\n", "\r\n/**\r\n * Tells if val is of type \"function\".\r\n * This holds true for both regular functions and classes.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn typeof val === 'function';\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"class\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) && /^class\\s?/.test(Function.prototype.toString.call(val));\r\n};\r\n", "\r\n/**\r\n * Tells if val is undefined or is null.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val === null || val === '';\r\n};\r\n", "\r\n/**\r\n * Tells if val is undefined or is of type \"undefined\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"object\".\r\n * This holds true for anything object, including built-ins.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isNull from './isNull.js';\r\nimport _isUndefined from './isUndefined.js';\r\nimport _isTypeObject from './isTypeObject.js';\r\n\r\n/**\r\n * Tells if val is empty in its own type.\r\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\r\n * objects without keys, empty arrays.\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \r\n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isTypeFunction from './isTypeFunction.js';\r\n\r\n/**\r\n * Tells if val is of type \"function\".\r\n *\r\n * @param object \t\tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\r\n};\r\n", "\r\n/**\r\n * Tells if val is of type \"string\".\r\n *\r\n * @param string \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isString from './isString.js';\r\nimport _isUndefined from './isUndefined.js';\r\n\r\n/**\r\n * Tells if val is \"array-like\".\r\n * This holds true for anything that has a length property.\r\n *\r\n * @param object\t \tval\r\n *\r\n * @return bool\r\n */\r\nexport default function(val) {\r\n\treturn !_isString(val) && !_isUndefined(val.length);\r\n};\r\n", "\r\n/**\r\n * @imports\r\n */\r\nimport _isArray from '../js/isArray.js';\r\nimport _isTypeArray from '../js/isTypeArray.js';\r\nimport _isEmpty from '../js/isEmpty.js';\r\nimport _isObject from '../js/isObject.js';\r\n\r\n/**\r\n * Casts an array-like object to an array.\r\n *\r\n * @param mixed \tval\r\n * @param bool\t \tcastObject\r\n *\r\n * @return array\r\n */\r\nexport default function(val, castObject = true) {\r\n\tif (_isArray(val)) {\r\n\t\treturn val;\r\n\t};\r\n\tif (!castObject && _isObject(val)) {\r\n\t\treturn [val];\r\n\t};\r\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\r\n\t\treturn [];\r\n\t};\r\n\tif (_isTypeArray(val)) {\r\n\t\treturn Array.prototype.slice.call(val);\r\n\t};\r\n\tif (_isObject(val)) {\r\n\t\treturn Object.values(val);\r\n\t};\r\n\treturn [val];\r\n};\r\n", "\n/**\n * ---------------------------\n * The Registration class\n * ---------------------------\n */\n\nexport default class Registration {\n\t\n\t/**\n\t * Initializes the instance.\n\t *\n\t * @param Registry\t\t\tregistry\n\t * @param object\t\t\tdfn\n\t *\n\t * @return void\n\t */\n\tconstructor( registry, dfn ) {\n\t\tthis.registry = registry;\n\t\tObject.assign( this, { ...dfn, target: registry.target } );\n\t\tif ( this.params.signal ) {\n\t\t\tthis.params.signal.addEventListener( 'abort', () => this.remove() );\n\t\t}\n\t}\n\n\t/**\n\t * Sets a \"disconnected\" flag on the Registration.\n\t *\n\t * @return void\n\t */\n\tremove() {\n\t\tthis.removed = true;\n\t\treturn this.registry.removeRegistration( this );\n\t}\n}", "\n/**\n * @imports\n */\nimport { _internals } from '@webqit/util/js/index.js';\n\nexport const _ = ( ...args ) => _internals( 'observer-api', ...args );\n\nexport const _await = ( value, callback ) => value instanceof Promise ? value.then( callback ) : callback( value );\n", "\n/**\n * @imports\n */\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\nimport Registration from './Registration.js';\nimport { _await } from '../util.js';\n\n/**\n * ---------------------------\n * The ListenerRegistration class\n * ---------------------------\n */\n\nexport default class ListenerRegistration extends Registration {\n\t\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.emit.currentRegistration = this;\n\t\tObject.defineProperty( this, 'abortController', { value: new AbortController } );\n\t\tObject.defineProperty( this, 'signal', { value: this.abortController.signal } );\n\t}\n\n\t/**\n\t * De-registers the instance.\n\t * \n\t * @return Void\n\t */\n\tremove() {\n\t\tthis.abortController.abort();\n\t\tsuper.remove();\n\t}\n\n\t/**\n\t * Calls the observer's handler function\n\t * on matching with the event's fields.\n\t *\n\t * @param Array\t\t\t \t\tevents\n\t *\n\t * @return Any\n\t */\n\tfire( events ) {\n\t\tif ( this.emit.recursionTarget && ![ 'inject', 'force-async', 'force-sync' ].includes( this.params.recursions ) ) return;\n\t\tlet matches = events, filter = this.filter;\n\t\tif ( filter !== Infinity && ( filter = _arrFrom( filter, false ) ) ) {\n\t\t\tmatches = events.filter( event => filter.includes( event.key ) );\n\t\t}\n\t\tif ( this.params.diff ) {\n\t\t\tmatches = matches.filter( event => event.type !== 'set' || event.value !== event.oldValue );\n\t\t}\n\t\tif ( matches.length ) {\n\t\t\tif ( this.emit.recursionTarget && this.params.recursions !== 'force-sync' ) {\n\t\t\t\tthis.emit.recursionTarget.push( ...matches );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.emit.recursionTarget = this.params.recursions === 'inject' ? matches : [];\n\t\t\tconst $ret = this.filter === Infinity || Array.isArray( this.filter )\n\t\t\t\t? this.emit( matches, this )\n\t\t\t\t: this.emit( matches[ 0 ], this );\n\t\t\t// NOTEL: on calling emit(), this registration has expired and a new one active!!!\n\t\t\treturn _await( $ret, ret => {\n\t\t\t\tconst recursions = this.emit.recursionTarget;\n\t\t\t\tdelete this.emit.recursionTarget;\n\t\t\t\tif ( this.params.recursions === 'force-async' ) {\n\t\t\t\t\tif ( recursions.length ) return this.emit.currentRegistration.fire( recursions );\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t\t} );\n\t\t}\n\t}\n}\n", "\n/**\n * @imports\n */\nimport { _isTypeObject, _getType } from '@webqit/util/js/index.js';\nimport { _from as _arrFrom, _intersect, _equals as _arrEquals } from '@webqit/util/arr/index.js';\nimport { _ } from '../util.js';\n\n/**\n * ---------------------------\n * The Registry class\n * ---------------------------\n */\n\nexport default class Registry {\n\t\n\t/**\n\t * Initializes the instance.\n\t *\n\t * @param object\ttarget\n\t * \n\t * @return void\n\t */\n\tconstructor( target ) {\n\t\tthis.target = target;\n\t\tthis.entries = [];\n\t}\n\t\n\t/**\n\t * Adds an Registration instance\n\t * with optional tags.\n\t *\n\t * @param Registration\t\tregistration\n\t *\n\t * @return Registration\n\t */\n\taddRegistration( registration ) {\n\t\tthis.entries.push( registration );\n\t\treturn registration;\n\t}\n\t\n\t/**\n\t * Removes registrations by reference.\n\t *\n\t * @param Registration\t\tregistration\n\t *\n\t * @return void\n\t */\n\tremoveRegistration( registration ) {\n\t\tthis.entries = this.entries.filter( _entry => _entry !== registration );\n\t}\n\t\t\n\t/**\n\t * Returns a observer-specific object embedded on an element.\n\t *\n\t * @param string\t\ttype\n\t * @param array|object\ttarget\n\t * @param bool      \tcreateIfNotExists\n\t * @param string      \tnamespace\n\t *\n\t * @return Registry\n\t */\n\tstatic _getInstance( type, target, createIfNotExists = true, namespace = this.__namespace ) {\n\t\tif ( !_isTypeObject( target ) ) throw new Error( `Subject must be of type object; \"${ _getType( target ) }\" given!` );\n\t\tlet ImplementationClass = this;\n\t\tif ( namespace && _( 'namespaces' ).has( type + '-' + namespace ) ) {\n\t\t\tImplementationClass = _( 'namespaces' ).get( type + '-' + namespace );\n\t\t\ttype += '-' + namespace\n\t\t}\n\t\tif ( !_( target, 'registry' ).has( type ) && createIfNotExists ) {\n\t\t\t_( target, 'registry' ).set( type, new ImplementationClass( target ) );\n\t\t}\n\t\treturn _( target, 'registry' ).get( type );\n\t}\n\n\t/**\n\t * Extend a Fireable Class with a namespace.\n\t *\n\t * @param string\t\tnamespace\n\t * @param class      \tImplementationClass\n\t *\n\t * @return void|class\n\t */\n\tstatic _namespace( type, namespace, ImplementationClass = null ) {\n\t\ttype += '-' + namespace;\n\t\tif ( arguments.length === 2 ) return _( 'namespaces' ).get( type );\n\t\tif ( !( ImplementationClass.prototype instanceof this ) ) {\n\t\t\tthrow new Error( `The implementation of the namespace ${ this.name }.${ namespace } must be a subclass of ${ this.name }.` );\n\t\t}\n\t\t_( 'namespaces' ).set( type, ImplementationClass );\n\t\tImplementationClass.__namespace = namespace;\n\t}\n}", "\n/**\n * @imports\n */\nimport ListenerRegistration from './ListenerRegistration.js';\nimport Registry from './Registry.js';\nimport { _await } from '../util.js';\n\n/**\n * ---------------------------\n * The ListenerRegistry class\n * ---------------------------\n */\n\nexport default class ListenerRegistry extends Registry {\n\n\tstatic getInstance( target, createIfNotExists = true, namespace = null ) {\n\t\treturn super._getInstance( 'listeners', ...arguments );\n\t}\n\n\tstatic namespace( namespace, ImplementationClass = null ) {\n\t\treturn super._namespace( 'listeners', ...arguments );\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor( target ) {\n\t\tsuper( target );\n\t\tthis.batches = [];\n\t}\n\t\n\t/**\n\t * @addRegistration\n\t */\n\taddRegistration( filter, emit, params ) {\n\t\treturn super.addRegistration( new ListenerRegistration( this, { filter, emit, params } ) );\n\t}\n\t\n\t/**\n\t * Fires all observers with the given evt (change).\n\t *\n\t * @param Arrayn events\n\t *\n\t * @return Void\n\t */\n\temit( events ) {\n\t\tif ( this.batches.length ) {\n\t\t\tthis.batches[ 0 ].events.push( ...events );\n\t\t\treturn\n\t\t}\n\t\tthis.entries.forEach( listener => listener.fire( events ) );\n\t}\n\n\t/**\n\t * Fires all observers with the given evt (change).\n\t *\n\t * @param Arrayn events\n\t *\n\t * @return Void\n\t */\n\tbatch( callback ) {\n\t\tthis.batches.unshift( { entries: [ ...this.entries ], events: [] } );\n\t\tconst returnValue = callback();\n\t\treturn _await( returnValue, returnValue => {\n\t\t\tconst batch = this.batches.shift();\n\t\t\tif ( batch.events.length ) {\n\t\t\t\tbatch.entries.forEach( listener => listener.fire( batch.events ) );\n\t\t\t}\n\t\t\treturn returnValue;\n\t\t} )\n\t}\n\n}", "\n/**\n * @imports\n */\nimport Registration from './Registration.js';\n\n/**\n * ---------------------------\n * The TrapsRegistration class\n * ---------------------------\n */\n\nexport default class TrapsRegistration extends Registration {\n\t\n\t/**\n\t * Calls the observer's handler function\n\t * on matching with the descriptor's fields.\n\t *\n\t * @param Descriptor\t\t\t \tdescriptor\n\t * @param function\t\t\t\t\tnext\n\t * @param mixed\t\t\t\t\t \trecieved\n\t *\n\t * @return void\n\t */\n\texec( descriptor, next, recieved ) {\n\t\tif ( this.running || !this.traps[ descriptor.type ] ) {\n\t\t\treturn next( ...Array.prototype.slice.call( arguments, 2 ) );\n\t\t}\n\t\tthis.running = true;\n\t\treturn this.traps[ descriptor.type ]( descriptor, recieved, ( ...args ) => {\n\t\t\tthis.running = false;\n\t\t\treturn next( ...args );\n\t\t} );\n\t}\n}", "\n/**\n * @imports\n */\nimport TrapsRegistration from './TrapsRegistration.js';\nimport Registry from './Registry.js';\n\n/**\n * ---------------------------\n * The TrapsRegistry class\n * ---------------------------\n */\n\nexport default class TrapsRegistry extends Registry {\n\n\tstatic getInstance( target, createIfNotExists = true, namespace = null ) {\n\t\treturn super._getInstance( 'traps', ...arguments );\n\t}\n\n\tstatic namespace( namespace, ImplementationClass = null ) {\n\t\treturn super._namespace( 'traps', ...arguments );\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\taddRegistration( dfn ) {\n\t\treturn super.addRegistration( new TrapsRegistration( this, dfn ) );\n\t}\n\n\t/**\n\t * Fires all interceptors with the given action.\n\t *\n\t * @param Descriptor\t\tdescriptor\n\t * @param function\t\t\tdefaultHandler\n\t *\n\t * @return mixed\n\t */\n\temit( descriptor, defaultHandler = null ) {\n\t\tconst $this = this;\n\t\treturn ( function next( index, ..._args ) {\n\t\t\tconst registration = $this.entries[ index ];\n\t\t\tif ( registration ) {\n\t\t\t\treturn registration.exec( descriptor, ( ...args ) => {\n\t\t\t\t\treturn next( index + 1, ...args );\n\t\t\t\t}/*next*/, ..._args );\n\t\t\t}\n\t\t\treturn defaultHandler ? defaultHandler( descriptor, ..._args ) : _args[ 0 ];\n\t\t} )( 0 );\n\t}\n}", "\n/**\n * ---------------------------\n * The Descriptor class\n * ---------------------------\n */\n\nexport default class Descriptor {\n\t\n\t/**\n\t * Initializes the instance.\n\t *\n\t * @param array|object\ttarget\n\t * @param object\t\tdfn\n\t *\n\t * @return void\n\t */\n\tconstructor( target, dfn ) {\n\t\tthis.target = target;\n\t\tif ( !( dfn.type ) ) throw new Error( 'Descriptor type must be given in definition!' );\n\t\tObject.assign( this, dfn );\n\t}\n}", "\n/**\n * @imports\n */\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\nimport { _isClass, _isFunction, _isTypeObject, _getType } from '@webqit/util/js/index.js';\nimport { set, deleteProperty, has, get, ownKeys, defineProperty, getOwnPropertyDescriptor } from \"./main.js\";\nimport { batch, apply, construct, getPrototypeOf, setPrototypeOf, isExtensible, preventExtensions } from \"./main.js\";\nimport { _ } from './util.js';\n\n/* ---------------ACCESSORIZE METHODS--------------- */\n\n/**\n * Accessorizes props.\n *\n * @param Array|Object\ttarget\n * @param String|Array\tprops\n * @param Object\t\tparams\n *\n * @return Array\n */\nexport function accessorize( target, props, params = {} ) {\n    target = resolveTarget( target );\n    const accessorizedProps = _( target, 'accessorizedProps' );\n    // ---------\n    function getDescriptorDeep( prop ) {\n        let descriptor, proto = target;\n        do {\n            descriptor = Object.getOwnPropertyDescriptor( proto, prop );\n        } while ( !descriptor && ( proto = Object.getPrototypeOf( proto ) ) );\n        return descriptor \n            ? { proto, descriptor } \n            : { descriptor: { value: undefined, configurable: true, enumerable: true, writable: true } };\n    }\n    // ---------\n    function accessorizeProp( prop ) {\n        if ( accessorizedProps.has( prop + '' ) ) return true;\n        // ------------------\n        // Current Descriptor Record\n        const currentDescriptorRecord = getDescriptorDeep( prop );\n        currentDescriptorRecord.getValue = function() {\n            return this.descriptor.get ? this.descriptor.get() : this.descriptor.value;\n        };\n        currentDescriptorRecord.setValue = function( value ) {\n            this.dirty = true;\n            return this.descriptor.set ? this.descriptor.set( value ) !== false : ( this.descriptor.value = value, true );\n        };\n        currentDescriptorRecord.intact = function() {\n            const currentDescriptor = Object.getOwnPropertyDescriptor( target, prop );\n            return currentDescriptor?.get === accessorization.get \n                && currentDescriptor?.set === accessorization.set\n                && accessorizedProps.get( prop + '' ) === this;\n        };\n        currentDescriptorRecord.restore = function() {\n            if ( !this.intact() ) return false;\n            if ( ( this.proto && this.proto !== target ) || ( !this.proto && !this.dirty ) ) { delete target[ prop ]; }\n            else { Object.defineProperty( target, prop, this.descriptor ); }\n            accessorizedProps.delete( prop + '' );\n            return true;\n        };\n        accessorizedProps.set( prop + '', currentDescriptorRecord );\n        // ------------------\n        // enumerable, configurable\n        const { enumerable = true } = currentDescriptorRecord.descriptor;\n        const accessorization = { enumerable, configurable: true };\n        // set, get\n        if ( ( 'value' in currentDescriptorRecord.descriptor ) || currentDescriptorRecord.descriptor.set ) {\n            accessorization.set = function ( value ) { return set( this, prop, value, params ); };\n        }\n        if ( ( 'value' in currentDescriptorRecord.descriptor ) || currentDescriptorRecord.descriptor.get ) {\n            accessorization.get = function () { return get( this, prop, params ); };\n        }\n        try {\n            Object.defineProperty( target, prop, accessorization );\n            return true;\n        } catch( e ) {\n            accessorizedProps.delete( prop + '' );\n            return false;\n        }\n    }\n    const _props = Array.isArray( props ) ? props : (\n        props === undefined ? Object.keys( target ) : [ props ]\n    );\n    const statuses = _props.map( accessorizeProp );\n    return props === undefined || Array.isArray( props ) \n        ? statuses \n        : statuses[ 0 ];\n}\n\n/**\n * Unaccessorizes previously accessorized props.\n *\n * @param Array|Object\ttarget\n * @param String|Array\tprops\n * @param Object\t\tparams\n *\n * @return Array\n */\nexport function unaccessorize( target, props, params = {} ) {\n    target = resolveTarget( target );\n    const accessorizedProps = _( target, 'accessorizedProps' );\n    function unaccessorizeProp( prop ) {\n        if ( !accessorizedProps.has( prop + '' ) ) return true;\n        return accessorizedProps.get( prop + '' ).restore();\n    }\n    const _props = Array.isArray( props ) ? props : (\n        props === undefined ? Object.keys( target ) : [ props ]\n    );\n    const statuses = _props.map( unaccessorizeProp );\n    return props === undefined || Array.isArray( props ) \n        ? statuses \n        : statuses[ 0 ];\n}\n\n/* ---------------PROXY METHODS--------------- */\n\n/**\n * Returns an object as a proxy and binds all instance methods\n * to the proxy instead of the object itself.\n *\n * @param Array|Object\t\ttarget\n * @param Object\t\t    params\n *\n * @return Proxy\n */\nexport function proxy( target, params = {} ) {\n    target = resolveTarget( target );\n    const proxy = new Proxy( target, {\n        apply:  ( target, thisArgument, argumentsList ) => apply( target, thisArgument, argumentsList, params ),\n        construct:  ( target, argumentsList, newTarget = null ) => construct( target, argumentsList, newTarget, params ),\n        defineProperty:  ( target, propertyKey, attributes ) => defineProperty( target, propertyKey, attributes, params ),\n        deleteProperty: ( target, propertyKey ) => deleteProperty( target, propertyKey, params ),\n        get: ( target, propertyKey, receiver = null ) => {\n            const val = get( target, propertyKey, { ...params, receiver } );\n            if ( params.proxyAutoBinding !== false && _isFunction( val ) && !_isClass( val )) {\n                return function( ...args ) {\n                    const _this = this || proxy;\n                    return batch( _this, () => val.call( _this, ...args ) );\n                }\n            }\n            return val;\n        },\n        getOwnPropertyDescriptor: ( target, propertyKey ) => getOwnPropertyDescriptor( target, propertyKey, params ),\n        getPrototypeOf: target => getPrototypeOf( target, params ),\n        has: ( target, propertyKey ) => has( target, propertyKey, params ),\n        isExtensible: target => isExtensible( target, params ),\n        ownKeys: target => ownKeys( target, params ),\n        preventExtensions: target => preventExtensions( target, params ),\n        set: ( target, propertyKey, value, receiver = null ) => set( target, propertyKey, value, { ...params, receiver } ),\n        setPrototypeOf: ( target, prototype ) => setPrototypeOf( target, prototype, params ),\n    });\n    _( proxy ).set( proxy, target );\n\treturn proxy;\n}\n\n/**\n * Returns the original object earlier proxied by proxy().\n *\n * @param Proxy|Any\t\ttarget\n *\n * @return Any\n */\nexport function unproxy( target ) {\n    // Proxy targets are mapped to their own instances internally\n    return _( target ).get( target ) || target;\n}\n\n/* ---------------HELPERS--------------- */\n\n/** \n * Ensures target object is an object or array.\n *\n * @param Array|Object\ttarget\n *\n * @return Array|Object\n */\nfunction resolveTarget( target ) {\n\tif ( !target || !_isTypeObject( target ) ) throw new Error('Target must be of type object!');\n\treturn unproxy( target );\n}\n", "\n/**\n * @imports\n */\nimport * as main from './main.js';\nimport * as actors from './actors.js';\n\nconst Observer = { ...main, ...actors };\n\nexport default Observer;", "\n/**\n * @imports\n */\nimport Observer from './index.js';\n\n// As globals\nif ( !self.webqit ) { self.webqit = {}; }\nself.webqit.Observer = Observer;"],
  "mappings": "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",
  "names": ["main_exports", "__export", "apply", "batch", "construct", "defineProperties", "defineProperty", "deleteProperties", "deleteProperty", "get", "getOwnPropertyDescriptor", "getOwnPropertyDescriptors", "getPrototypeOf", "has", "intercept", "isExtensible", "observe", "ownKeys", "path", "preventExtensions", "reduce", "set", "setPrototypeOf", "isObject_default", "val", "getType_default", "val", "isArray_default", "val", "intersect_default", "arr", "arr2", "callback", "isArray_default", "val1", "val2", "internals", "obj", "namespaces", "ObservableMap", "itnls", "_ns", "_itnls", "args", "key", "value", "returnValue", "type", "callback", "entry", "_intersection", "a", "b", "intersect_default", "isTypeFunction_default", "val", "isClass_default", "val", "isTypeFunction_default", "isNull_default", "val", "isUndefined_default", "val", "isTypeObject_default", "val", "isTypeFunction_default", "isEmpty_default", "val", "isNull_default", "isUndefined_default", "isTypeObject_default", "isFunction_default", "val", "isTypeFunction_default", "isString_default", "val", "isTypeArray_default", "val", "isString_default", "isUndefined_default", "from_default", "val", "castObject", "isArray_default", "isObject_default", "isEmpty_default", "isTypeArray_default", "Registration", "registry", "dfn", "_", "args", "internals", "_await", "value", "callback", "ListenerRegistration", "Registration", "events", "matches", "filter", "from_default", "event", "$ret", "_await", "ret", "recursions", "Registry", "target", "registration", "_entry", "type", "createIfNotExists", "namespace", "isTypeObject_default", "getType_default", "ImplementationClass", "_", "ListenerRegistry", "Registry", "target", "createIfNotExists", "namespace", "ImplementationClass", "filter", "emit", "params", "ListenerRegistration", "events", "listener", "callback", "returnValue", "_await", "batch", "TrapsRegistration", "Registration", "descriptor", "next", "recieved", "args", "TrapsRegistry", "Registry", "target", "createIfNotExists", "namespace", "ImplementationClass", "dfn", "TrapsRegistration", "descriptor", "defaultHandler", "$this", "next", "index", "_args", "registration", "args", "Descriptor", "target", "dfn", "actors_exports", "__export", "accessorize", "proxy", "unaccessorize", "unproxy", "accessorize", "target", "props", "params", "resolveTarget", "accessorizedProps", "_", "getDescriptorDeep", "prop", "descriptor", "proto", "accessorizeProp", "currentDescriptorRecord", "value", "currentDescriptor", "accessorization", "enumerable", "set", "get", "statuses", "unaccessorize", "unaccessorizeProp", "proxy", "thisArgument", "argumentsList", "apply", "newTarget", "construct", "propertyKey", "attributes", "defineProperty", "deleteProperty", "receiver", "val", "isFunction_default", "isClass_default", "args", "_this", "batch", "getOwnPropertyDescriptor", "getPrototypeOf", "has", "isExtensible", "ownKeys", "preventExtensions", "prototype", "setPrototypeOf", "unproxy", "isTypeObject_default", "Path", "path", "segments", "reduce", "target", "receiver", "final", "x", "params", "eat", "$params", "segment", "isLastSegment", "Descriptor", "result", "args", "addTrail", "desc", "advance", "$value", "resolveObj", "_await", "flags", "isPropsList", "observe", "prop", "isFunction_default", "getType_default", "isTypeObject_default", "get", "emit", "bind", "intercept", "traps", "isObject_default", "TrapsRegistry", "getOwnPropertyDescriptor", "exec", "getOwnPropertyDescriptors", "getPrototypeOf", "isExtensible", "ownKeys", "has", "isLive", "resolveProps", "props", "related", "next", "results", "_props", "_done", "defaultGet", "descriptor", "value", "_next", "accessorizedProps", "_", "accessorization", "listenerRegistry", "result_s", "batch", "callback", "ListenerRegistry", "set", "def", "entries", "descriptors", "defaultSet", "status", "isUpdate", "oldValue", "exists", "opr", "defineProperty", "defineProperties", "deleteProperty", "from_default", "defaultDel", "deleteProperties", "construct", "argumentsList", "newTarget", "apply", "thisArgument", "setPrototypeOf", "proto", "preventExtensions", "controller", "descriptor_s", "prevRegistration", "handlerReturnValue", "type", "payload", "defaultExec", "obj", "assert", "unproxy", "Observer", "main_exports", "actors_exports", "src_default", "src_default"]
}
